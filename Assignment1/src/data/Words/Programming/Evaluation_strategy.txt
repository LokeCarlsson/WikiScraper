<!DOCTYPE html>/n<html class="client-nojs" lang="en" dir="ltr">/n<head>/n<meta charset="UTF-8"/>/n<title>Evaluation strategy - Wikipedia</title>/n<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>/n<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Evaluation_strategy","wgTitle":"Evaluation strategy","wgCurRevisionId":801441945,"wgRevisionId":801441945,"wgArticleId":2977119,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Wikipedia articles needing clarification from January 2017","All articles with unsourced statements","Articles with unsourced statements from June 2014","Articles with unsourced statements from August 2014","Articles needing additional references from June 2013","All articles needing additional references","Articles lacking in-text citations from April 2012","All articles lacking in-text citations","Evaluation strategy"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Evaluation_strategy","wgRelevantArticleId":2977119,"wgRequestId":"Wee7QgpAAEYAAFkl-FwAAAAC","wgIsProbablyEditable":true,"wgRelevantPageIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgFlaggedRevsParams":{"tags":{}},"wgStableRevisionId":null,"wgWikiEditorEnabledModules":{"toolbar":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":false,"wgPopupsShouldSendModuleToUser":true,"wgPopupsConflictsWithNavPopupGadget":false,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFExpandAllSectionsUserOption":false,"wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":false},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgWikibaseItemId":"Q2881121","wgCentralAuthMobileDomain":false,"wgCodeMirrorEnabled":false,"wgVisualEditorToolbarScrollOffset":0,"wgVisualEditorUnsupportedEditParams":["undo","undoafter","veswitched"],"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.gadget.charinsert-styles":"ready","ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"ready","user.tokens":"loading","ext.cite.styles":"ready","ext.pygments":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.wikimediaBadges":"ready","skins.vector.styles.experimental.print":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.tokens@1dqfd7l",function ( $, jQuery, require, module ) {/nmw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*//n/n});mw.loader.load(["ext.cite.a11y","site","mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.toc","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.centralauth.centralautologin","mmv.head","mmv.bootstrap.autostart","ext.popups","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.uls.interface","ext.centralNotice.geoIP","ext.centralNotice.startUp","skins.vector.js"]);});</script>/n<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.cite.styles%7Cext.pygments%2CwikimediaBadges%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cskins.vector.styles.experimental.print%7Cwikibase.client.init&amp;only=styles&amp;skin=vector"/>/n<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>/n<meta name="ResourceLoaderDynamicStyles" content=""/>/n<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.charinsert-styles&amp;only=styles&amp;skin=vector"/>/n<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>/n<meta name="generator" content="MediaWiki 1.31.0-wmf.3"/>/n<meta name="referrer" content="origin-when-cross-origin"/>/n<link rel="alternate" href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Evaluation_strategy"/>/n<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Evaluation_strategy&amp;action=edit"/>/n<link rel="edit" title="Edit this page" href="/w/index.php?title=Evaluation_strategy&amp;action=edit"/>/n<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png"/>/n<link rel="shortcut icon" href="/static/favicon/wikipedia.ico"/>/n<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)"/>/n<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd"/>/n<link rel="license" href="//creativecommons.org/licenses/by-sa/3.0/"/>/n<link rel="canonical" href="https://en.wikipedia.org/wiki/Evaluation_strategy"/>/n<link rel="dns-prefetch" href="//login.wikimedia.org"/>/n<link rel="dns-prefetch" href="//meta.wikimedia.org" />/n<!--[if lt IE 9]><script src="/w/load.php?debug=false&amp;lang=en&amp;modules=html5shiv&amp;only=scripts&amp;skin=vector&amp;sync=1"></script><![endif]-->/n</head>/n<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Evaluation_strategy rootpage-Evaluation_strategy vector-experimental-print-styles vector-nav-directionality skin-vector action-view">		<div id="mw-page-base" class="noprint"></div>/n		<div id="mw-head-base" class="noprint"></div>/n		<div id="content" class="mw-body" role="main">/n			<a id="top"></a>/n/n							<div id="siteNotice" class="mw-body-content"><!-- CentralNotice --></div>/n						<div class="mw-indicators mw-body-content">/n</div>/n			<h1 id="firstHeading" class="firstHeading" lang="en">Evaluation strategy</h1>/n									<div id="bodyContent" class="mw-body-content">/n									<div id="siteSub" class="noprint">From Wikipedia, the free encyclopedia</div>/n								<div id="contentSub"></div>/n												<div id="jump-to-nav" class="mw-jump">/n					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>/n				</div>/n				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="mw-parser-output"><table class="vertical-navbox nowraplinks" style="float:right;clear:right;width:22.0em;margin:0 0 1.0em 1.0em;background:#f9f9f9;border:1px solid #aaa;padding:0.2em;border-spacing:0.4em 0;text-align:center;line-height:1.4em;font-size:88%">/n<tr>/n<th style="padding:0.2em 0.4em 0.2em;font-size:145%;line-height:1.2em"><a class="mw-selflink selflink">Evaluation strategies</a></th>/n</tr>/n<tr>/n<td style="padding:0 0.1em 0.4em;text-align: left">/n<ul>/n<li><a href="/wiki/Eager_evaluation" title="Eager evaluation">Eager evaluation</a></li>/n<li><a href="/wiki/Lazy_evaluation" title="Lazy evaluation">Lazy evaluation</a></li>/n<li><a href="/wiki/Partial_evaluation" title="Partial evaluation">Partial evaluation</a></li>/n<li><a href="/wiki/Remote_evaluation" title="Remote evaluation">Remote evaluation</a></li>/n<li><a href="/wiki/Short-circuit_evaluation" title="Short-circuit evaluation">Short-circuit evaluation</a></li>/n</ul>/n</td>/n</tr>/n<tr>/n<td style="text-align:right;font-size:115%">/n<div class="plainlinks hlist navbar mini">/n<ul>/n<li class="nv-view"><a href="/wiki/Template:Evaluation_strategy" title="Template:Evaluation strategy"><abbr title="View this template">v</abbr></a></li>/n<li class="nv-talk"><a href="/wiki/Template_talk:Evaluation_strategy" title="Template talk:Evaluation strategy"><abbr title="Discuss this template">t</abbr></a></li>/n<li class="nv-edit"><a class="external text" href="//en.wikipedia.org/w/index.php?title=Template:Evaluation_strategy&amp;action=edit"><abbr title="Edit this template">e</abbr></a></li>/n</ul>/n</div>/n</td>/n</tr>/n</table>/n<p><a href="/wiki/Programming_languages" class="mw-redirect" title="Programming languages">Programming languages</a> use evaluation strategies to determine <b>when</b> to evaluate the argument(s) of a function call (for function, also read: operation, method, or relation) and <b>what</b> kind of value to pass to the function. For example, call by value/call by reference specifies that a function application evaluates the argument before it proceeds to the evaluation of the function's body and that it passes two capabilities to the function, namely, the ability to look up the current value of the argument and to modify it via an assignment statement.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1">[1]</a></sup> The notion of <a href="/wiki/Reduction_strategy_(lambda_calculus)" title="Reduction strategy (lambda calculus)">reduction strategy</a> in <a href="/wiki/Lambda_calculus" title="Lambda calculus">lambda calculus</a> is similar but distinct.</p>/n<p>In practical terms, many modern programming languages have converged on a call-by-value/call-by-reference<sup class="noprint Inline-Template" style="margin-left:0.1em; white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Please_clarify" title="Wikipedia:Please clarify"><span title="The text near this tag may need clarification or removal of jargon. (January 2017)">clarification needed</span></a></i>]</sup> evaluation strategy for function calls (C#, Java). Some languages, especially lower-level languages such as C++, combine several notions of parameter passing. Historically, call by value and call by name date back to <a href="/wiki/ALGOL_60" title="ALGOL 60">ALGOL 60</a>, a language designed in the late 1950s. Call by reference is used by <a href="/wiki/PL/I" title="PL/I">PL/I</a> and some <a href="/wiki/Fortran" title="Fortran">Fortran</a> systems.<sup id="cite_ref-2" class="reference"><a href="#cite_note-2">[2]</a></sup> Purely functional languages like <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a>, as well as non-purely functional languages like <a href="/wiki/R_(programming_language)" title="R (programming language)">R</a>, use call by need.</p>/n<p>The evaluation strategy is specified by the programming language definition, and is not a function of any specific implementation.</p>/n<p></p>/n<div id="toc" class="toc">/n<div class="toctitle">/n<h2>Contents</h2>/n</div>/n<ul>/n<li class="toclevel-1 tocsection-1"><a href="#Strict_evaluation"><span class="tocnumber">1</span> <span class="toctext">Strict evaluation</span></a>/n<ul>/n<li class="toclevel-2 tocsection-2"><a href="#Applicative_order"><span class="tocnumber">1.1</span> <span class="toctext">Applicative order</span></a></li>/n<li class="toclevel-2 tocsection-3"><a href="#Call_by_value"><span class="tocnumber">1.2</span> <span class="toctext">Call by value</span></a>/n<ul>/n<li class="toclevel-3 tocsection-4"><a href="#Implicit_limitations"><span class="tocnumber">1.2.1</span> <span class="toctext">Implicit limitations</span></a></li>/n</ul>/n</li>/n<li class="toclevel-2 tocsection-5"><a href="#Call_by_reference"><span class="tocnumber">1.3</span> <span class="toctext">Call by reference</span></a></li>/n<li class="toclevel-2 tocsection-6"><a href="#Call_by_sharing"><span class="tocnumber">1.4</span> <span class="toctext">Call by sharing</span></a></li>/n<li class="toclevel-2 tocsection-7"><a href="#Call_by_copy-restore"><span class="tocnumber">1.5</span> <span class="toctext">Call by copy-restore</span></a></li>/n<li class="toclevel-2 tocsection-8"><a href="#Partial_evaluation"><span class="tocnumber">1.6</span> <span class="toctext">Partial evaluation</span></a></li>/n</ul>/n</li>/n<li class="toclevel-1 tocsection-9"><a href="#Non-strict_evaluation"><span class="tocnumber">2</span> <span class="toctext">Non-strict evaluation</span></a>/n<ul>/n<li class="toclevel-2 tocsection-10"><a href="#Normal_order"><span class="tocnumber">2.1</span> <span class="toctext">Normal order</span></a></li>/n<li class="toclevel-2 tocsection-11"><a href="#Call_by_name"><span class="tocnumber">2.2</span> <span class="toctext">Call by name</span></a></li>/n<li class="toclevel-2 tocsection-12"><a href="#Call_by_need"><span class="tocnumber">2.3</span> <span class="toctext">Call by need</span></a></li>/n<li class="toclevel-2 tocsection-13"><a href="#Call_by_macro_expansion"><span class="tocnumber">2.4</span> <span class="toctext">Call by macro expansion</span></a></li>/n</ul>/n</li>/n<li class="toclevel-1 tocsection-14"><a href="#Nondeterministic_strategies"><span class="tocnumber">3</span> <span class="toctext">Nondeterministic strategies</span></a>/n<ul>/n<li class="toclevel-2 tocsection-15"><a href="#Full_.CE.B2-reduction"><span class="tocnumber">3.1</span> <span class="toctext">Full β-reduction</span></a></li>/n<li class="toclevel-2 tocsection-16"><a href="#Call_by_future"><span class="tocnumber">3.2</span> <span class="toctext">Call by future</span></a></li>/n<li class="toclevel-2 tocsection-17"><a href="#Optimistic_evaluation"><span class="tocnumber">3.3</span> <span class="toctext">Optimistic evaluation</span></a></li>/n</ul>/n</li>/n<li class="toclevel-1 tocsection-18"><a href="#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>/n<li class="toclevel-1 tocsection-19"><a href="#Notes"><span class="tocnumber">5</span> <span class="toctext">Notes</span></a></li>/n<li class="toclevel-1 tocsection-20"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>/n</ul>/n</div>/n<p></p>/n<h2><span class="mw-headline" id="Strict_evaluation">Strict evaluation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=1" title="Edit section: Strict evaluation">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<div role="note" class="hatnote navigation-not-searchable">Main article: <a href="/wiki/Eager_evaluation" title="Eager evaluation">Eager evaluation</a></div>/n<p>In <i>strict evaluation,</i> the arguments to a <a href="/wiki/Subroutine" title="Subroutine">function</a> are always evaluated completely before the function is applied.</p>/n<p>Under <a href="/wiki/Church_encoding" title="Church encoding">Church encoding</a>, <a href="/wiki/Eager_evaluation" title="Eager evaluation">eager evaluation</a> of <a href="/wiki/Operator_(programming)" class="mw-redirect" title="Operator (programming)">operators</a> maps to strict evaluation of functions; for this reason, strict evaluation is sometimes called "eager". Most existing programming languages use strict evaluation for functions.</p>/n<h3><span class="mw-headline" id="Applicative_order">Applicative order</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=2" title="Edit section: Applicative order">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<p><i>Applicative order</i> (or <i>leftmost innermost</i><sup id="cite_ref-3" class="reference"><a href="#cite_note-3">[3]</a></sup><sup id="cite_ref-4" class="reference"><a href="#cite_note-4">[4]</a></sup>) evaluation refers to an evaluation strategy in which the arguments of a function are evaluated from left to right in a <a href="/wiki/Post-order_traversal" class="mw-redirect" title="Post-order traversal">post-order traversal</a> of reducible expressions (<a href="https://en.wiktionary.org/wiki/redex" class="extiw" title="wiktionary:redex">redexes</a>). Applicative order is a call-by-value evaluation.</p>/n<h3><span class="mw-headline" id="Call_by_value">Call by value<span id="Call-by-value"></span></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=3" title="Edit section: Call by value">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<p><i>Call by value</i> (also referred to as <i>pass by value</i>) is the most common evaluation strategy, used in languages as different as <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> and <a href="/wiki/Scheme_(programming_language)" title="Scheme (programming language)">Scheme</a>. In call by value, the argument expression is evaluated, and the resulting value is bound to the corresponding variable in the function (frequently by copying the value into a new memory region). If the function or procedure is able to assign values to its parameters, only its local copy is assigned—that is, anything passed into a function call is unchanged in the caller's <a href="/wiki/Scope_(programming)" class="mw-redirect" title="Scope (programming)">scope</a> when the function returns.</p>/n<p>Call by value is not a single evaluation strategy, but rather the family of evaluation strategies in which a function's argument is evaluated before being passed to the function. While many programming languages (such as Common Lisp, Eiffel and Java) that use call by value evaluate function arguments left-to-right, some evaluate functions and their arguments right-to-left, and others (such as Scheme, OCaml and C) leave the order unspecified.</p>/n<h4><span class="mw-headline" id="Implicit_limitations">Implicit limitations</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=4" title="Edit section: Implicit limitations">edit</a><span class="mw-editsection-bracket">]</span></span></h4>/n<p>In some cases, the term "call by value" is problematic, as the value which is passed is not the value of the variable as understood by the ordinary meaning of value, but an implementation-specific <a href="/wiki/Reference_(computer_science)" title="Reference (computer science)">reference</a> to the value. The effect is that what syntactically looks like call by value may end up rather behaving like call by reference or <a href="#Call_by_sharing">call by sharing</a>, often depending on very subtle aspects of the language semantics.</p>/n<p>The reason for passing a reference is often that the language technically does not provide a value representation of complicated data, but instead represents them as a data structure while preserving some semblance of value appearance in the source code. Exactly where the boundary is drawn between proper values and data structures masquerading as such is often hard to predict. In <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>, an array (of which strings are special cases) is a data structure and thus treated as a reference to a memory area, but a <a href="/wiki/Struct_(C_programming_language)" title="Struct (C programming language)">struct</a> is a value even if it has fields that are vectors. In <a href="/wiki/Maple_(software)" title="Maple (software)">Maple</a>, a vector is a special case of a table and therefore a data structure, but a list (which gets rendered and can be indexed in exactly the same way) is a value. In <a href="/wiki/Tcl" title="Tcl">Tcl</a>, values are "dual-ported" such that the value representation is used at the script level, and the language itself manages the corresponding data structure, if one is required. Modifications made via the data structure are reflected back to the value representation, and vice versa.</p>/n<p>The description "call by value where the value is a reference" is common (but should not be understood as being call by reference); another term is <a href="#Call_by_sharing">call by sharing</a>. Thus the behaviour of call by value Java or Visual Basic and call by value C or Pascal are significantly different: in C or Pascal, calling a function with a large structure as an argument will cause the entire structure to be copied (except if it's actually a reference to a structure), <i>potentially</i> causing serious performance degradation, and mutations to the structure are invisible to the caller. However, in Java or Visual Basic only the reference to the structure is copied, which is fast, and mutations to the structure are visible to the caller.</p>/n<h3><span class="mw-headline" id="Call_by_reference">Call by reference<span id="Call-by-reference"></span></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=5" title="Edit section: Call by reference">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<p><i>Call by reference</i> (also referred to as <i>pass by reference</i>) is an evaluation strategy where a function receives an implicit <a href="/wiki/Reference_(computer_science)" title="Reference (computer science)">reference</a> to a variable used as argument, rather than a copy of its value. This typically means that the function can modify (i.e. <a href="/wiki/Assignment_(computer_science)" title="Assignment (computer science)">assign to</a>) the variable used as argument—something that will be seen by its caller. Call by reference can therefore be used to provide an additional channel of communication between the called function and the calling function. A call-by-reference language makes it more difficult for a programmer to track the effects of a function call, and may introduce subtle bugs.</p>/n<p>Many languages support call by reference in some form or another, but comparatively few use it as a default. <a href="/wiki/Fortran" title="Fortran">FORTRAN II</a> is an early example of a call-by-reference language. A few languages, such as <a href="/wiki/C%2B%2B" title="C++">C++</a>, <a href="/wiki/PHP" title="PHP">PHP</a>, <a href="/wiki/Visual_Basic_.NET" title="Visual Basic .NET">Visual Basic .NET</a>, <a href="/wiki/C_Sharp_(programming_language)" title="C Sharp (programming language)">C#</a> and <a href="/wiki/REALbasic" class="mw-redirect" title="REALbasic">REALbasic</a>, default to call by value, but offer special syntax for call-by-reference parameters. C++ additionally offers call by reference to <a href="/wiki/Const-correctness" class="mw-redirect" title="Const-correctness">const</a>.</p>/n<p><span id="call-by-address"></span> Call by reference can be simulated in languages that use call by value and don't exactly support call by reference, by making use of <a href="/wiki/Reference_(computer_science)" title="Reference (computer science)">references</a> (objects that refer to other objects), such as <a href="/wiki/Pointer_(computer_programming)" title="Pointer (computer programming)">pointers</a> (objects representing the memory addresses of other objects). Languages such as <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a> and <a href="/wiki/ML_(programming_language)" title="ML (programming language)">ML</a> use this technique. It is not a separate evaluation strategy—the language calls by value—but sometimes it is referred to as <i>call by address</i> (also referred to as <i>pass by address</i>). In ML references are <a href="/wiki/Type_safety" title="Type safety">type-</a> and <a href="/wiki/Memory_safety" title="Memory safety">memory-</a> safe.</p>/n<p>Similar effect is achieved by <a href="#Call_by_sharing">call by sharing</a> (passing an object, which can then be mutated), used in languages like Java, Python and Ruby.</p>/n<p>In <a href="/wiki/Purely_functional_language" class="mw-redirect" title="Purely functional language">purely functional languages</a> there is typically no semantic difference between the two strategies (since their data structures are immutable, so there is no possibility for a function to modify any of its arguments), so they are typically described as call by value even though implementations frequently use call by reference internally for the efficiency benefits.</p>/n<p>Example that demonstrates call by reference in <a href="/wiki/E_(programming_language)" title="E (programming language)">E</a>:</p>/n<pre>/ndef modify(var p, &amp;q) {/n    p := 27 # passed by value: only the local parameter is modified/n    q := 27 # passed by reference: variable used in call is modified/n}/n/n? var a := 1/n# value: 1/n? var b := 2/n# value: 2/n? modify(a, &amp;b)/n? a/n# value: 1/n? b/n# value: 27/n</pre>/n<p>Example the call by address that simulates call by reference in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>:</p>/n<div class="mw-highlight mw-content-ltr" dir="ltr">/n<pre>/n<span class="kt">void</span> <span class="nf">modify</span><span class="p">(</span><span class="kt">int</span> <span class="n">p</span><span class="p">,</span> <span class="kt">int</span><span class="o">*</span> <span class="n">q</span><span class="p">,</span> <span class="kt">int</span><span class="o">*</span> <span class="n">r</span><span class="p">)</span> <span class="p">{</span>/n    <span class="n">p</span> <span class="o">=</span> <span class="mi">27</span><span class="p">;</span> <span class="c1">// passed by value: only the local parameter is modified</span>/n    <span class="o">*</span><span class="n">q</span> <span class="o">=</span> <span class="mi">27</span><span class="p">;</span> <span class="c1">// passed by value or reference, check call site to determine which</span>/n    <span class="o">*</span><span class="n">r</span> <span class="o">=</span> <span class="mi">27</span><span class="p">;</span> <span class="c1">// passed by value or reference, check call site to determine which</span>/n<span class="p">}</span>/n/n<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>/n    <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>/n    <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>/n    <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>/n    <span class="kt">int</span><span class="o">*</span> <span class="n">c</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">x</span><span class="p">;</span>/n    <span class="n">modify</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">);</span> <span class="c1">// a is passed by value, b is passed by reference by creating a pointer (call by value),</span>/n                    <span class="c1">// c is a pointer passed by value</span>/n                    <span class="c1">// b and x are changed</span>/n    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>/n<span class="p">}</span>/n</pre></div>/n<h3><span class="mw-headline" id="Call_by_sharing">Call by sharing<span id="Call-by-sharing"></span></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=6" title="Edit section: Call by sharing">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<p><i>Call by sharing</i> (also referred to as <i>call by object</i> or <i>call by object-sharing</i>) is an evaluation strategy first named by <a href="/wiki/Barbara_Liskov" title="Barbara Liskov">Barbara Liskov</a> et al. for the language <a href="/wiki/CLU_programming_language" class="mw-redirect" title="CLU programming language">CLU</a> in 1974.<sup id="cite_ref-CLU_Reference_Manual_5-0" class="reference"><a href="#cite_note-CLU_Reference_Manual-5">[5]</a></sup> It is used by languages such as <a href="/wiki/Python_(programming_language)" title="Python (programming language)">Python</a>,<sup id="cite_ref-Lundh_Call_By_Object_6-0" class="reference"><a href="#cite_note-Lundh_Call_By_Object-6">[6]</a></sup> <a href="/wiki/Iota_and_Jot" title="Iota and Jot">Iota</a>,<sup id="cite_ref-7" class="reference"><a href="#cite_note-7">[7]</a></sup> <a href="/wiki/Java_(programming_language)" title="Java (programming language)">Java</a> (for object references), <a href="/wiki/Ruby_(programming_language)" title="Ruby (programming language)">Ruby</a>, <a href="/wiki/JavaScript" title="JavaScript">JavaScript</a>, Scheme, OCaml, <a href="/wiki/AppleScript" title="AppleScript">AppleScript</a>, and many others. However, the term "call by sharing" is not in common use; the terminology is inconsistent across different sources. For example, in the Java community, they say that Java is call by value.<sup id="cite_ref-8" class="reference"><a href="#cite_note-8">[8]</a></sup> Call by sharing implies that values in the language are based on objects rather than <a href="/wiki/Primitive_types" class="mw-redirect" title="Primitive types">primitive types</a>, i.e. that all values are "<a href="/wiki/Boxed_type" class="mw-redirect" title="Boxed type">boxed</a>".</p>/n<p>The semantics of call by sharing differ from call by reference in that assignments to function arguments within the function aren't visible to the caller (unlike by reference semantics): "In particular it is not call by value because mutations of arguments performed by the called routine will be visible to the caller. And it is not call by reference because access is not given to the variables of the caller, but merely to certain objects"<sup id="cite_ref-FOOTNOTECLU_Reference_Manual197414-15_9-0" class="reference"><a href="#cite_note-FOOTNOTECLU_Reference_Manual197414-15-9">[9]</a></sup>. So e.g. if a variable was passed, it is not possible to simulate an assignment on that variable in the caller's scope. However, since the function has access to the same object as the caller (no copy is made), mutations to those objects, if the objects are <a href="/wiki/Mutable_object" class="mw-redirect" title="Mutable object">mutable</a>, within the function are visible to the caller, which may appear to differ from call by value semantics. Mutations of a mutable object within the function are visible to the caller because the object is not copied or cloned — it is shared. For example, in Python, lists are mutable, so:</p>/n<div class="mw-highlight mw-content-ltr" dir="ltr">/n<pre>/n<span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">l</span><span class="p">):</span>/n    <span class="n">l</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>/n<span class="n">m</span> <span class="o">=</span> <span class="p">[]</span>/n<span class="n">f</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>/n<span class="k">print</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>/n</pre></div>/n<p>outputs <code>[1]</code> because the <code>append</code> method modifies the object on which it is called.</p>/n<p>Assignments within a function are not noticeable to the caller, because, in these languages, an assignment binds a variable to a different object rather than mutating the object. Since the rebound variable only exists within the scope of the function, the counterpart in the caller retains its original binding. Compare the Python mutation above with this code that binds the formal argument to a new object:</p>/n<div class="mw-highlight mw-content-ltr" dir="ltr">/n<pre>/n<span class="k">def</span> <span class="nf">f</span><span class="p">(</span><span class="n">l</span><span class="p">):</span>/n    <span class="n">l</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">]</span>/n<span class="n">m</span> <span class="o">=</span> <span class="p">[]</span>/n<span class="n">f</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>/n<span class="k">print</span><span class="p">(</span><span class="n">m</span><span class="p">)</span>/n</pre></div>/n<p>outputs <code>[]</code>, because the statement <code>l = [1]</code> reassigns a new list to the <i>variable</i> rather than to the location it references.</p>/n<p>For <a href="/wiki/Immutable_object" title="Immutable object">immutable objects</a>, there is no real difference between call by sharing and call by value, except if object identity is visible in the language. The use of call by sharing with mutable objects is an alternative to <a href="/wiki/Output_parameter" class="mw-redirect" title="Output parameter">input/output parameters</a>:<sup id="cite_ref-CA1021_10-0" class="reference"><a href="#cite_note-CA1021-10">[10]</a></sup> the parameter is not assigned to (the argument is not overwritten and object identity is not changed), but the object (argument) is mutated.</p>/n<p>Although this term has widespread usage in the Python community, identical semantics in other languages such as Java and Visual Basic are often described as call by value, where the value is implied to be a reference to the object.<sup class="noprint Inline-Template Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (June 2014)">citation needed</span></a></i>]</sup></p>/n<h3><span class="mw-headline" id="Call_by_copy-restore">Call by copy-restore<span id="Call-by-copy-restore"></span></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=7" title="Edit section: Call by copy-restore">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<p><i>Call by copy-restore</i> (also referred to as <i>copy-in copy-out</i>, <i>call by value result</i> or <i>call by value return</i>—as termed in the <a href="/wiki/Fortran" title="Fortran">Fortran</a> community) is a special case of call by reference where the provided reference is unique to the caller. This variant has gained attention in multiprocessing contexts and <a href="/wiki/Remote_procedure_call" title="Remote procedure call">Remote procedure call</a><sup class="noprint Inline-Template Template-Fact" style="white-space:nowrap;">[<i><a href="/wiki/Wikipedia:Citation_needed" title="Wikipedia:Citation needed"><span title="This claim needs references to reliable sources. (August 2014)">citation needed</span></a></i>]</sup>: if a parameter to a function call is a reference that might be accessible by another thread of execution, its contents may be copied to a new reference that is not; when the function call returns, the updated contents of this new reference are copied back to the original reference ("restored").</p>/n<p>The semantics of call by copy-restore also differ from those of call by reference where two or more function arguments <a href="/wiki/Aliasing_(computing)" title="Aliasing (computing)">alias</a> one another; that is, point to the same variable in the caller's environment. Under call by reference, writing to one will affect the other; call by copy-restore avoids this by giving the function distinct copies, but leaves the result in the caller's environment <a href="/wiki/Undefined_behaviour" class="mw-redirect" title="Undefined behaviour">undefined</a> depending on which of the aliased arguments is copied back first—will the copies be made in left-to-right order both on entry and on return?</p>/n<p>When the reference is passed to the callee uninitialized, this evaluation strategy may be called <i>call by result</i>.</p>/n<h3><span class="mw-headline" id="Partial_evaluation">Partial evaluation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=8" title="Edit section: Partial evaluation">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<div role="note" class="hatnote navigation-not-searchable">Main article: <a href="/wiki/Partial_evaluation" title="Partial evaluation">Partial evaluation</a></div>/n<p>In <i>partial evaluation</i>, evaluation may continue into the body of a function that has not been applied. Any sub-expressions that do not contain unbound variables are evaluated, and function applications whose argument values are known may be reduced. In the presence of side-effects, complete partial evaluation may produce unintended results; for this reason, systems that support partial evaluation tend to do so only for "pure" expressions (expressions without side-effects) within functions.</p>/n<h2><span class="mw-headline" id="Non-strict_evaluation">Non-strict evaluation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=9" title="Edit section: Non-strict evaluation">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<table class="plainlinks metadata ambox ambox-content ambox-Unreferenced" role="presentation">/n<tr>/n<td class="mbox-image">/n<div style="width:52px"><a href="/wiki/File:Question_book-new.svg" class="image"><img alt="" src="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width="50" height="39" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x" data-file-width="512" data-file-height="399" /></a></div>/n</td>/n<td class="mbox-text">/n<div class="mbox-text-span">This section <b>does not <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">cite</a> any <a href="/wiki/Wikipedia:Verifiability" title="Wikipedia:Verifiability">sources</a></b>. <span class="hide-when-compact">Please help <a class="external text" href="//en.wikipedia.org/w/index.php?title=Evaluation_strategy&amp;action=edit">improve this section</a> by <a href="/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1" title="Help:Introduction to referencing with Wiki Markup/1">adding citations to reliable sources</a>. Unsourced material may be challenged and <a href="/wiki/Wikipedia:Verifiability#Burden_of_evidence" title="Wikipedia:Verifiability">removed</a>.</span> <small><i>(June 2013)</i></small> <small class="hide-when-compact"><i>(<a href="/wiki/Help:Maintenance_template_removal" title="Help:Maintenance template removal">Learn how and when to remove this template message</a>)</i></small></div>/n</td>/n</tr>/n</table>/n<p>In <i>non-strict evaluation,</i> arguments to a function are not evaluated unless they are actually used in the evaluation of the function body.</p>/n<p>Under Church encoding, <a href="/wiki/Lazy_evaluation" title="Lazy evaluation">lazy evaluation</a> of operators maps to non-strict evaluation of functions; for this reason, non-strict evaluation is often referred to as "lazy". Boolean expressions in many languages use a form of non-strict evaluation called <a href="/wiki/Short-circuit_evaluation" title="Short-circuit evaluation">short-circuit evaluation</a>, where evaluation returns as soon as it can be determined that an unambiguous Boolean will result—for example, in a disjunctive expression where <i>true</i> is encountered, or in a conjunctive expression where <i>false</i> is encountered, and so forth. Conditional expressions also usually use lazy evaluation, where evaluation returns as soon as an unambiguous branch will result.</p>/n<h3><span class="mw-headline" id="Normal_order">Normal order</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=10" title="Edit section: Normal order">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<p><i>Normal-order</i> (or <i>leftmost outermost</i>) evaluation is the evaluation strategy where the outermost redex is always reduced, applying functions before evaluating function arguments.</p>/n<p>In contrast, call by name does not evaluate inside the body of an unapplied function.</p>/n<h3><span class="mw-headline" id="Call_by_name">Call by name<span id="Call-by-name"></span></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=11" title="Edit section: Call by name">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<p><i>Call by name</i> is an evaluation strategy where the arguments to a function are not evaluated before the function is called—rather, they are substituted directly into the function body (using <a href="/wiki/Capture-avoiding_substitution" class="mw-redirect" title="Capture-avoiding substitution">capture-avoiding substitution</a>) and then left to be evaluated whenever they appear in the function. If an argument is not used in the function body, the argument is never evaluated; if it is used several times, it is re-evaluated each time it appears. (See <a href="/wiki/Jensen%27s_Device" title="Jensen's Device">Jensen's Device</a>.)</p>/n<p>Call-by-name evaluation is occasionally preferable to call-by-value evaluation. If a function's argument is not used in the function, call by name will save time by not evaluating the argument, whereas call by value will evaluate it regardless. If the argument is a non-terminating computation, the advantage is enormous. However, when the function argument is used, call by name is often slower, requiring a mechanism such as a <a href="/wiki/Thunk_(functional_programming)#Call_by_name" class="mw-redirect" title="Thunk (functional programming)">thunk</a>.</p>/n<p>An early use was <a href="/wiki/ALGOL_60" title="ALGOL 60">ALGOL 60</a>. Today's <a href="/wiki/.NET_languages" class="mw-redirect" title=".NET languages">.NET languages</a> can simulate call by name using delegates or Expression&lt;T&gt; parameters. The latter results in an abstract syntax tree being given to the function. <a href="/wiki/Eiffel_(programming_language)" title="Eiffel (programming language)">Eiffel</a> provides agents, which represent an operation to be evaluated when needed. <a href="/wiki/Seed7" title="Seed7">Seed7</a> provides call by name with function parameters.</p>/n<h3><span class="mw-headline" id="Call_by_need">Call by need<span id="Call-by-need"></span></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=12" title="Edit section: Call by need">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<div role="note" class="hatnote navigation-not-searchable">Main article: <a href="/wiki/Lazy_evaluation" title="Lazy evaluation">Lazy evaluation</a></div>/n<p><i>Call by need</i> is a <a href="/wiki/Memoization" title="Memoization">memoized</a> version of call by name where, <i>if the function argument is evaluated,</i> that value is stored for subsequent uses. In a “pure“ (effect-free) setting, this produces the same results as call by name; when the function argument is used two or more times, call by need is almost always faster.</p>/n<p>Because evaluation of expressions may happen arbitrarily far into a computation, languages using call by need generally only support computational effects (such as <a href="/wiki/Mutable_object" class="mw-redirect" title="Mutable object">mutation</a>) via the use of <a href="/wiki/Monads_in_functional_programming" class="mw-redirect" title="Monads in functional programming">monads</a> or <a href="/wiki/Uniqueness_type" title="Uniqueness type">uniqueness types</a>. This eliminates any unexpected behavior from variables whose values change prior to their delayed evaluation.</p>/n<p><a href="/wiki/Lazy_evaluation" title="Lazy evaluation">Lazy evaluation</a> is the most commonly used implementation strategy for call-by-need semantics, but variations exist—for instance <a href="#Optimistic_evaluation">optimistic evaluation</a>.</p>/n<p><a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a> is the best-known language that uses call-by-need evaluation. <a href="/wiki/R_(programming_language)" title="R (programming language)">R</a> also uses a form of call by need. .NET languages implement call by need using the type <code>Lazy&lt;T&gt;</code>.</p>/n<h3><span class="mw-headline" id="Call_by_macro_expansion">Call by macro expansion<span id="Call-by-macro-expansion"></span></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=13" title="Edit section: Call by macro expansion">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<p><i>Call by macro expansion</i> is similar to call by name, but uses textual substitution rather than capture-avoiding substitution. With uncautious use, macro substitution may result in <a href="/w/index.php?title=Variable_capture&amp;action=edit&amp;redlink=1" class="new" title="Variable capture (page does not exist)">variable capture</a> and lead to undesired behavior. <a href="/wiki/Hygienic_macros" class="mw-redirect" title="Hygienic macros">Hygienic macros</a> avoid this problem by checking for and replacing shadowed variables that are not parameters.</p>/n<h2><span class="mw-headline" id="Nondeterministic_strategies">Nondeterministic strategies</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=14" title="Edit section: Nondeterministic strategies">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<h3><span id="Full_β-reduction"></span><span class="mw-headline" id="Full_.CE.B2-reduction">Full β-reduction</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=15" title="Edit section: Full β-reduction">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<p>Under <i>full β-reduction,</i> any function application may be reduced (substituting the function's argument into the function using capture-avoiding substitution) at any time. This may be done even within the body of an unapplied function.</p>/n<h3><span class="mw-headline" id="Call_by_future">Call by future<span id="Call-by-future"></span></span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=16" title="Edit section: Call by future">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<div role="note" class="hatnote navigation-not-searchable">See also: <a href="/wiki/Futures_and_promises" title="Futures and promises">Futures and promises</a></div>/n<p><i>Call by future</i> (also referred to as <i>parallel call by name</i>) is a <a href="/wiki/Concurrent_programming" class="mw-redirect" title="Concurrent programming">concurrent</a> evaluation strategy where the value of a <a href="/wiki/Futures_and_promises" title="Futures and promises">future</a> expression is computed concurrently with the flow of the rest of the program by one or more <i>promises</i>. When the value of the future is needed, the main program blocks until the future has a value (the promise or one of the promises finishes computing, if it has not already completed by then).</p>/n<p>This strategy is non-deterministic, as the evaluation can occur at any time between creation of the future (<i>i.e.,</i> when the expression is given) and use of the future's value. It is similar to call by need in that the value is only computed once, and computation may be deferred until the value is needed, but it may be started before. Further, if the value of a future is not needed, such as if it is a local variable in a function that returns, the computation may be terminated part-way through.</p>/n<p>If implemented with processes or threads, creating a future will spawn one or more new processes or threads (for the promises), accessing the value will synchronize these with the main thread, and terminating the computation of the future corresponds to killing the promises computing its value.</p>/n<p>If implemented with a <a href="/wiki/Coroutine" title="Coroutine">coroutine</a>, as in .NET async/await, creating a future calls a coroutine (an async function), which may yield to the caller, and in turn be yielded back to when the value is used, cooperatively multitasking.</p>/n<h3><span class="mw-headline" id="Optimistic_evaluation">Optimistic evaluation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=17" title="Edit section: Optimistic evaluation">edit</a><span class="mw-editsection-bracket">]</span></span></h3>/n<p><i>Optimistic evaluation</i><sup id="cite_ref-Optimistic_Evaluation_11-0" class="reference"><a href="#cite_note-Optimistic_Evaluation-11">[11]</a></sup> is another variant of call by need in which the function's argument is partially evaluated for some amount of time (which may be adjusted at runtime), after which evaluation is aborted and the function is applied using call by need. This approach avoids some of the runtime expense of call by need, while still retaining the desired termination characteristics.</p>/n<h2><span class="mw-headline" id="See_also">See also</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=18" title="Edit section: See also">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<ul>/n<li><a href="/wiki/Beta_normal_form" title="Beta normal form">Beta normal form</a></li>/n<li><a href="/wiki/Comparison_of_programming_languages" title="Comparison of programming languages">Comparison of programming languages</a></li>/n<li><a href="/wiki/Lambda_calculus" title="Lambda calculus">Lambda calculus</a></li>/n<li><a href="/wiki/Parameter_(computer_science)" class="mw-redirect" title="Parameter (computer science)">Parameter (computer science)</a></li>/n<li><a href="/wiki/Eval()" class="mw-redirect" title="Eval()">Eval()</a></li>/n</ul>/n<h2><span class="mw-headline" id="Notes">Notes</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=19" title="Edit section: Notes">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<div class="reflist" style="list-style-type: decimal;">/n<div class="mw-references-wrap mw-references-columns">/n<ol class="references">/n<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text">Essentials of Programming Languages by Daniel P. Friedman and Mitchell Wand, MIT Press 1989–2006</span></li>/n<li id="cite_note-2"><span class="mw-cite-backlink"><b><a href="#cite_ref-2">^</a></b></span> <span class="reference-text">Some Fortran systems use call by copy-restore.</span></li>/n<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="https://www.cs.uiowa.edu/~hzhang/c123/Lecture5.pdf">"Lambda Calculus"</a> <span style="font-size:85%;">(PDF)</span>. Cs.uiowa.edu<span class="reference-accessdate">. Retrieved <span class="nowrap">2013-08-18</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.btitle=Lambda+Calculus&amp;rft.genre=unknown&amp;rft.pub=Cs.uiowa.edu&amp;rft_id=https%3A%2F%2Fwww.cs.uiowa.edu%2F~hzhang%2Fc123%2FLecture5.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>/n<li id="cite_note-4"><span class="mw-cite-backlink"><b><a href="#cite_ref-4">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://encyclopedia2.thefreedictionary.com/applicative+order+reduction">"applicative order reduction definition of applicative order reduction in the Free Online Encyclopedia"</a>. Encyclopedia2.thefreedictionary.com<span class="reference-accessdate">. Retrieved <span class="nowrap">2013-08-18</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.btitle=applicative+order+reduction+definition+of+applicative+order+reduction+in+the+Free+Online+Encyclopedia&amp;rft.genre=unknown&amp;rft.pub=Encyclopedia2.thefreedictionary.com&amp;rft_id=http%3A%2F%2Fencyclopedia2.thefreedictionary.com%2Fapplicative%2Border%2Breduction&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>/n<li id="cite_note-CLU_Reference_Manual-5"><span class="mw-cite-backlink"><b><a href="#cite_ref-CLU_Reference_Manual_5-0">^</a></b></span> <span class="reference-text"><cite class="citation web">Liskov, Barbara; Atkinson, Russ; Bloom, Toby; Moss, Eliot; Schaffert, Craig; Scheifler, Craig; Snyder, Alan (October 1979). <a rel="nofollow" class="external text" href="http://www.lcs.mit.edu/publications/pubs/pdf/MIT-LCS-TR-225.pdf">"CLU Reference Manual"</a> <span style="font-size:85%;">(PDF)</span>. <i>Laboratory for Computer Science</i>. Massachusetts Institute of Technology<span class="reference-accessdate">. Retrieved <span class="nowrap">2011-05-19</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.atitle=CLU+Reference+Manual&amp;rft.au=Atkinson%2C+Russ&amp;rft.au=Bloom%2C+Toby&amp;rft.au=Moss%2C+Eliot&amp;rft.au=Schaffert%2C+Craig&amp;rft.au=Scheifler%2C+Craig&amp;rft.au=Snyder%2C+Alan&amp;rft.aufirst=Barbara&amp;rft.aulast=Liskov&amp;rft.date=1979-10&amp;rft.genre=unknown&amp;rft.jtitle=Laboratory+for+Computer+Science&amp;rft_id=http%3A%2F%2Fwww.lcs.mit.edu%2Fpublications%2Fpubs%2Fpdf%2FMIT-LCS-TR-225.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>/n<li id="cite_note-Lundh_Call_By_Object-6"><span class="mw-cite-backlink"><b><a href="#cite_ref-Lundh_Call_By_Object_6-0">^</a></b></span> <span class="reference-text"><cite class="citation web">Lundh, Fredrik. <a rel="nofollow" class="external text" href="http://effbot.org/zone/call-by-object.htm">"Call By Object"</a>. <i>effbot.org</i><span class="reference-accessdate">. Retrieved <span class="nowrap">2011-05-19</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.atitle=Call+By+Object&amp;rft.aufirst=Fredrik&amp;rft.aulast=Lundh&amp;rft.genre=unknown&amp;rft.jtitle=effbot.org&amp;rft_id=http%3A%2F%2Feffbot.org%2Fzone%2Fcall-by-object.htm&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>/n<li id="cite_note-7"><span class="mw-cite-backlink"><b><a href="#cite_ref-7">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://www.cs.cornell.edu/courses/cs412/2001sp/iota/iota.html">"Iota Language Definition"</a>. <i>CS 412/413 Introduction to Compilers</i>. Cornell University. 2001<span class="reference-accessdate">. Retrieved <span class="nowrap">2011-05-19</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.atitle=Iota+Language+Definition&amp;rft.date=2001&amp;rft.genre=unknown&amp;rft.jtitle=CS+412%2F413+Introduction+to+Compilers&amp;rft_id=http%3A%2F%2Fwww.cs.cornell.edu%2Fcourses%2Fcs412%2F2001sp%2Fiota%2Fiota.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>/n<li id="cite_note-8"><span class="mw-cite-backlink"><b><a href="#cite_ref-8">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://javadude.com/articles/passbyvalue.htm">"Java is Pass-by-Value, Dammit!"</a><span class="reference-accessdate">. Retrieved <span class="nowrap">2016-12-24</span></span>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.btitle=Java+is+Pass-by-Value%2C+Dammit%21&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fjavadude.com%2Farticles%2Fpassbyvalue.htm&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>/n<li id="cite_note-FOOTNOTECLU_Reference_Manual197414-15-9"><span class="mw-cite-backlink"><b><a href="#cite_ref-FOOTNOTECLU_Reference_Manual197414-15_9-0">^</a></b></span> <span class="reference-text"><a href="#CITEREFCLU_Reference_Manual1974">CLU Reference Manual (1974)</a>, p.&#160;14-15.</span></li>/n<li id="cite_note-CA1021-10"><span class="mw-cite-backlink"><b><a href="#cite_ref-CA1021_10-0">^</a></b></span> <span class="reference-text"><cite class="citation web"><a rel="nofollow" class="external text" href="http://msdn.microsoft.com/en-us/library/ms182131.aspx">"CA1021: Avoid out parameters"</a>. Microsoft.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.btitle=CA1021%3A+Avoid+out+parameters&amp;rft.genre=unknown&amp;rft.pub=Microsoft&amp;rft_id=http%3A%2F%2Fmsdn.microsoft.com%2Fen-us%2Flibrary%2Fms182131.aspx&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>/n<li id="cite_note-Optimistic_Evaluation-11"><span class="mw-cite-backlink"><b><a href="#cite_ref-Optimistic_Evaluation_11-0">^</a></b></span> <span class="reference-text"><cite class="citation web">Ennals, Robert; Jones, Simon Peyton (August 2003). <a rel="nofollow" class="external text" href="http://research.microsoft.com/en-us/um/people/simonpj/papers/optimistic/">"Optimistic Evaluation: a fast evaluation strategy for non-strict programs"</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.au=Jones%2C+Simon+Peyton&amp;rft.aufirst=Robert&amp;rft.aulast=Ennals&amp;rft.btitle=Optimistic+Evaluation%3A+a+fast+evaluation+strategy+for+non-strict+programs&amp;rft.date=2003-08&amp;rft.genre=unknown&amp;rft_id=http%3A%2F%2Fresearch.microsoft.com%2Fen-us%2Fum%2Fpeople%2Fsimonpj%2Fpapers%2Foptimistic%2F&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>/n</ol>/n</div>/n</div>/n<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit&amp;section=20" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<table class="plainlinks metadata ambox ambox-style ambox-More_footnotes" role="presentation">/n<tr>/n<td class="mbox-image">/n<div style="width:52px"><img alt="" src="//upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/40px-Text_document_with_red_question_mark.svg.png" width="40" height="40" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/60px-Text_document_with_red_question_mark.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/80px-Text_document_with_red_question_mark.svg.png 2x" data-file-width="48" data-file-height="48" /></div>/n</td>/n<td class="mbox-text">/n<div class="mbox-text-span">This article includes a <a href="/wiki/Wikipedia:Citing_sources" title="Wikipedia:Citing sources">list of references</a>, but <b>its sources remain unclear</b> because it has <b>insufficient <a href="/wiki/Wikipedia:Citing_sources#Inline_citations" title="Wikipedia:Citing sources">inline citations</a></b>. <span class="hide-when-compact">Please help to <a href="/wiki/Wikipedia:WikiProject_Fact_and_Reference_Check" title="Wikipedia:WikiProject Fact and Reference Check">improve</a> this article by <a href="/wiki/Wikipedia:When_to_cite" title="Wikipedia:When to cite">introducing</a> more precise citations.</span> <small><i>(April 2012)</i></small> <small class="hide-when-compact"><i>(<a href="/wiki/Help:Maintenance_template_removal" title="Help:Maintenance template removal">Learn how and when to remove this template message</a>)</i></small></div>/n</td>/n</tr>/n</table>/n<ul>/n<li><cite class="citation book"><a href="/wiki/Hal_Abelson" title="Hal Abelson">Abelson, Harold</a>; <a href="/wiki/Gerald_Jay_Sussman" title="Gerald Jay Sussman">Sussman, Gerald Jay</a> (1996). <a rel="nofollow" class="external text" href="http://mitpress.mit.edu/sicp/full-text/book/book.html"><i>Structure and Interpretation of Computer Programs</i></a> (Second ed.). Cambridge, Massachusetts: The MIT Press. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/978-0-262-01153-2" title="Special:BookSources/978-0-262-01153-2">978-0-262-01153-2</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.au=Sussman%2C+Gerald+Jay&amp;rft.aufirst=Harold&amp;rft.aulast=Abelson&amp;rft.btitle=Structure+and+Interpretation+of+Computer+Programs&amp;rft.date=1996&amp;rft.edition=Second&amp;rft.genre=book&amp;rft.isbn=978-0-262-01153-2&amp;rft.place=Cambridge%2C+Massachusetts&amp;rft.pub=The+MIT+Press&amp;rft_id=http%3A%2F%2Fmitpress.mit.edu%2Fsicp%2Ffull-text%2Fbook%2Fbook.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>/n<li><cite class="citation journal">Baker-Finch, Clem; King, David; Hall, Jon; Trinder, Phil (1999-03-10). <a rel="nofollow" class="external text" href="http://cs.anu.edu.au/people/Clem.Baker-Finch/Research/par-cbn-tr/">"An Operational Semantics for Parallel Call-by-Need"</a> <span style="font-size:85%;">(ps)</span>. <i>Research report</i>. Faculty of Mathematics &amp; Computing, The Open University. <b>99</b> (1).</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.atitle=An+Operational+Semantics+for+Parallel+Call-by-Need&amp;rft.au=Hall%2C+Jon&amp;rft.au=King%2C+David&amp;rft.au=Trinder%2C+Phil&amp;rft.aufirst=Clem&amp;rft.aulast=Baker-Finch&amp;rft.date=1999-03-10&amp;rft.genre=article&amp;rft.issue=1&amp;rft.jtitle=Research+report&amp;rft.volume=99&amp;rft_id=http%3A%2F%2Fcs.anu.edu.au%2Fpeople%2FClem.Baker-Finch%2FResearch%2Fpar-cbn-tr%2F&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></li>/n<li><cite class="citation conference">Ennals, Robert; Peyton Jones, Simon (2003). <a rel="nofollow" class="external text" href="http://research.microsoft.com/en-us/um/people/simonpj/Papers/optimistic/icfp2003.pdf"><i>Optimistic Evaluation: a fast evaluation strategy for non-strict programs</i></a> <span style="font-size:85%;">(PDF)</span>. International Conference on Functional Programming. ACM Press.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.au=Peyton+Jones%2C+Simon&amp;rft.aufirst=Robert&amp;rft.aulast=Ennals&amp;rft.btitle=Optimistic+Evaluation%3A+a+fast+evaluation+strategy+for+non-strict+programs&amp;rft.date=2003&amp;rft.genre=conference&amp;rft.pub=ACM+Press&amp;rft_id=http%3A%2F%2Fresearch.microsoft.com%2Fen-us%2Fum%2Fpeople%2Fsimonpj%2FPapers%2Foptimistic%2Ficfp2003.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>/n<li><cite class="citation web">Ludäscher, Bertram (2001-01-24). <a rel="nofollow" class="external text" href="http://users.sdsc.edu/~ludaesch/CSE130/ln5.html">"CSE 130 lecture notes"</a>. <i>CSE 130: Programming Languages: Principles &amp; Paradigms</i>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.atitle=CSE+130+lecture+notes&amp;rft.aufirst=Bertram&amp;rft.aulast=Lud%C3%A4scher&amp;rft.date=2001-01-24&amp;rft.genre=unknown&amp;rft.jtitle=CSE+130%3A+Programming+Languages%3A+Principles+%26+Paradigms&amp;rft_id=http%3A%2F%2Fusers.sdsc.edu%2F~ludaesch%2FCSE130%2Fln5.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></li>/n<li><cite class="citation book"><a href="/wiki/Benjamin_C._Pierce" title="Benjamin C. Pierce">Pierce, Benjamin C.</a> (2002). <i><a href="/wiki/Types_and_Programming_Languages" title="Types and Programming Languages">Types and Programming Languages</a></i>. <a href="/wiki/MIT_Press" title="MIT Press">MIT Press</a>. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/0-262-16209-1" title="Special:BookSources/0-262-16209-1">0-262-16209-1</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.aufirst=Benjamin+C.&amp;rft.aulast=Pierce&amp;rft.btitle=Types+and+Programming+Languages&amp;rft.date=2002&amp;rft.genre=book&amp;rft.isbn=0-262-16209-1&amp;rft.pub=MIT+Press&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>/n<li><cite class="citation book">Sestoft, Peter (2002). Mogensen, T; Schmidt, D; Sudborough, I. H., eds. <a rel="nofollow" class="external text" href="http://www.itu.dk/people/sestoft/papers/sestoft-lamreduce.pdf"><i>Demonstrating Lambda Calculus Reduction</i></a> <span style="font-size:85%;">(PDF)</span>. <i>The Essence of Computation: Complexity, Analysis, Transformation. Essays Dedicated to Neil D. Jones</i>. Lecture Notes in Computer Science. <b>2566</b>. Springer-Verlag. pp.&#160;420–435. <a href="/wiki/International_Standard_Book_Number" title="International Standard Book Number">ISBN</a>&#160;<a href="/wiki/Special:BookSources/3-540-00326-6" title="Special:BookSources/3-540-00326-6">3-540-00326-6</a>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.aufirst=Peter&amp;rft.aulast=Sestoft&amp;rft.btitle=Demonstrating+Lambda+Calculus+Reduction&amp;rft.date=2002&amp;rft.genre=book&amp;rft.isbn=3-540-00326-6&amp;rft.pages=420-435&amp;rft.pub=Springer-Verlag&amp;rft.series=Lecture+Notes+in+Computer+Science&amp;rft_id=http%3A%2F%2Fwww.itu.dk%2Fpeople%2Fsestoft%2Fpapers%2Fsestoft-lamreduce.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></li>/n<li><cite class="citation web"><a rel="nofollow" class="external text" href="http://digg.com/newsbar/topnews/c_programming_lesson_call_by_value_and_call_by_reference">"Call by Value and Call by Reference in C Programming"</a>. <i>Call by Value and Call by Reference in C Programming explained</i>.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AEvaluation+strategy&amp;rft.atitle=Call+by+Value+and+Call+by+Reference+in+C+Programming&amp;rft.genre=unknown&amp;rft.jtitle=Call+by+Value+and+Call+by+Reference+in+C+Programming+explained.&amp;rft_id=http%3A%2F%2Fdigg.com%2Fnewsbar%2Ftopnews%2Fc_programming_lesson_call_by_value_and_call_by_reference&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></li>/n</ul>/n/n/n<!-- /nNewPP limit report/nParsed by mw1186/nCached time: 20171018195730/nCache expiry: 1900800/nDynamic content: false/nCPU time usage: 0.284 seconds/nReal time usage: 0.352 seconds/nPreprocessor visited node count: 1519/1000000/nPreprocessor generated node count: 0/1500000/nPost‐expand include size: 44265/2097152 bytes/nTemplate argument size: 1670/2097152 bytes/nHighest expansion depth: 12/40/nExpensive parser function count: 5/500/nLua time usage: 0.145/10.000 seconds/nLua memory usage: 5.46 MB/50 MB/n-->/n<!--/nTransclusion expansion time report (%,ms,calls,template)/n100.00%  291.662      1 -total/n 25.84%   75.358      1 Template:Reflist/n 22.08%   64.413     10 Template:Cite_web/n 14.28%   41.645      1 Template:Clarify/n 13.05%   38.057      1 Template:Fix-span/n 12.32%   35.945      2 Template:Citation_needed/n 10.99%   32.064      2 Template:Fix/n 10.31%   30.067      6 Template:Category_handler/n  9.69%   28.248      3 Template:Delink/n  7.69%   22.416      1 Template:Programming_evaluation/n-->/n</div>/n<!-- Saved in parser cache with key enwiki:pcache:idhash:2977119-0!canonical and timestamp 20171018195730 and revision id 801441945/n -->/n<noscript><img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>					<div class="printfooter">/n						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Evaluation_strategy&amp;oldid=801441945">https://en.wikipedia.org/w/index.php?title=Evaluation_strategy&amp;oldid=801441945</a>"					</div>/n				<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Evaluation_strategy" title="Category:Evaluation strategy">Evaluation strategy</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:Wikipedia_articles_needing_clarification_from_January_2017" title="Category:Wikipedia articles needing clarification from January 2017">Wikipedia articles needing clarification from January 2017</a></li><li><a href="/wiki/Category:All_articles_with_unsourced_statements" title="Category:All articles with unsourced statements">All articles with unsourced statements</a></li><li><a href="/wiki/Category:Articles_with_unsourced_statements_from_June_2014" title="Category:Articles with unsourced statements from June 2014">Articles with unsourced statements from June 2014</a></li><li><a href="/wiki/Category:Articles_with_unsourced_statements_from_August_2014" title="Category:Articles with unsourced statements from August 2014">Articles with unsourced statements from August 2014</a></li><li><a href="/wiki/Category:Articles_needing_additional_references_from_June_2013" title="Category:Articles needing additional references from June 2013">Articles needing additional references from June 2013</a></li><li><a href="/wiki/Category:All_articles_needing_additional_references" title="Category:All articles needing additional references">All articles needing additional references</a></li><li><a href="/wiki/Category:Articles_lacking_in-text_citations_from_April_2012" title="Category:Articles lacking in-text citations from April 2012">Articles lacking in-text citations from April 2012</a></li><li><a href="/wiki/Category:All_articles_lacking_in-text_citations" title="Category:All articles lacking in-text citations">All articles lacking in-text citations</a></li></ul></div></div>				<div class="visualClear"></div>/n							</div>/n		</div>/n		<div id="mw-navigation">/n			<h2>Navigation menu</h2>/n/n			<div id="mw-head">/n									<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">/n						<h3 id="p-personal-label">Personal tools</h3>/n						<ul>/n							<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n">Talk</a></li><li id="pt-anoncontribs"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Evaluation+strategy" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Evaluation+strategy" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>						</ul>/n					</div>/n									<div id="left-navigation">/n										<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">/n						<h3 id="p-namespaces-label">Namespaces</h3>/n						<ul>/n														<li id="ca-nstab-main" class="selected"><span><a href="/wiki/Evaluation_strategy" title="View the content page [c]" accesskey="c">Article</a></span></li>/n							<li id="ca-talk"><span><a href="/wiki/Talk:Evaluation_strategy" rel="discussion" title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>/n						</ul>/n					</div>/n										<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">/n												<h3 id="p-variants-label">/n							<span>Variants</span>/n						</h3>/n/n						<div class="menu">/n							<ul>/n															</ul>/n						</div>/n					</div>/n									</div>/n				<div id="right-navigation">/n										<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">/n						<h3 id="p-views-label">Views</h3>/n						<ul>/n														<li id="ca-view" class="collapsible selected"><span><a href="/wiki/Evaluation_strategy">Read</a></span></li>/n							<li id="ca-edit" class="collapsible"><span><a href="/w/index.php?title=Evaluation_strategy&amp;action=edit" title="Edit this page [e]" accesskey="e">Edit</a></span></li>/n							<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=Evaluation_strategy&amp;action=history" title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>/n						</ul>/n					</div>/n										<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">/n						<h3 id="p-cactions-label"><span>More</span></h3>/n/n						<div class="menu">/n							<ul>/n															</ul>/n						</div>/n					</div>/n										<div id="p-search" role="search">/n						<h3>/n							<label for="searchInput">Search</label>/n						</h3>/n/n						<form action="/w/index.php" id="searchform">/n							<div id="simpleSearch">/n							<input type="search" name="search" placeholder="Search Wikipedia" title="Search Wikipedia [f]" accesskey="f" id="searchInput"/><input type="hidden" value="Special:Search" name="title"/><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>							</div>/n						</form>/n					</div>/n									</div>/n			</div>/n			<div id="mw-panel">/n				<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page"  title="Visit the main page"></a></div>/n						<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>/n			<h3 id='p-navigation-label'>Navigation</h3>/n/n			<div class="body">/n									<ul>/n						<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li>					</ul>/n							</div>/n		</div>/n			<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>/n			<h3 id='p-interaction-label'>Interaction</h3>/n/n			<div class="body">/n									<ul>/n						<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li>					</ul>/n							</div>/n		</div>/n			<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>/n			<h3 id='p-tb-label'>Tools</h3>/n/n			<div class="body">/n									<ul>/n						<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Evaluation_strategy" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Evaluation_strategy" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=Evaluation_strategy&amp;oldid=801441945" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=Evaluation_strategy&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q2881121" title="Link to connected data repository item [g]" accesskey="g">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Evaluation_strategy&amp;id=801441945" title="Information on how to cite this page">Cite this page</a></li>					</ul>/n							</div>/n		</div>/n			<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>/n			<h3 id='p-coll-print_export-label'>Print/export</h3>/n/n			<div class="body">/n									<ul>/n						<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Evaluation+strategy">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:ElectronPdf&amp;page=Evaluation+strategy&amp;action=show-download-screen">Download as PDF</a></li><li id="t-print"><a href="/w/index.php?title=Evaluation_strategy&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>					</ul>/n							</div>/n		</div>/n			<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>/n			<h3 id='p-lang-label'>Languages</h3>/n/n			<div class="body">/n									<ul>/n						<li class="interlanguage-link interwiki-cs"><a href="https://cs.wikipedia.org/wiki/Vyhodnocovac%C3%AD_strategie" title="Vyhodnocovací strategie – Czech" lang="cs" hreflang="cs" class="interlanguage-link-target">Čeština</a></li><li class="interlanguage-link interwiki-de"><a href="https://de.wikipedia.org/wiki/Auswertung_(Informatik)" title="Auswertung (Informatik) – German" lang="de" hreflang="de" class="interlanguage-link-target">Deutsch</a></li><li class="interlanguage-link interwiki-fr"><a href="https://fr.wikipedia.org/wiki/Strat%C3%A9gie_d%27%C3%A9valuation_(informatique)" title="Stratégie d'évaluation (informatique) – French" lang="fr" hreflang="fr" class="interlanguage-link-target">Français</a></li><li class="interlanguage-link interwiki-ko"><a href="https://ko.wikipedia.org/wiki/%ED%8F%89%EA%B0%80_%EC%A0%84%EB%9E%B5_(%EC%BB%B4%ED%93%A8%ED%84%B0_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D)" title="평가 전략 (컴퓨터 프로그래밍) – Korean" lang="ko" hreflang="ko" class="interlanguage-link-target">한국어</a></li><li class="interlanguage-link interwiki-nl"><a href="https://nl.wikipedia.org/wiki/Call-by-name" title="Call-by-name – Dutch" lang="nl" hreflang="nl" class="interlanguage-link-target">Nederlands</a></li><li class="interlanguage-link interwiki-ja"><a href="https://ja.wikipedia.org/wiki/%E8%A9%95%E4%BE%A1%E6%88%A6%E7%95%A5" title="評価戦略 – Japanese" lang="ja" hreflang="ja" class="interlanguage-link-target">日本語</a></li><li class="interlanguage-link interwiki-pt"><a href="https://pt.wikipedia.org/wiki/Estrat%C3%A9gia_de_avalia%C3%A7%C3%A3o" title="Estratégia de avaliação – Portuguese" lang="pt" hreflang="pt" class="interlanguage-link-target">Português</a></li><li class="interlanguage-link interwiki-ru"><a href="https://ru.wikipedia.org/wiki/%D0%A1%D1%82%D1%80%D0%B0%D1%82%D0%B5%D0%B3%D0%B8%D1%8F_%D0%B2%D1%8B%D1%87%D0%B8%D1%81%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F" title="Стратегия вычисления – Russian" lang="ru" hreflang="ru" class="interlanguage-link-target">Русский</a></li><li class="interlanguage-link interwiki-sk"><a href="https://sk.wikipedia.org/wiki/Vyhodnocovacia_strat%C3%A9gia" title="Vyhodnocovacia stratégia – Slovak" lang="sk" hreflang="sk" class="interlanguage-link-target">Slovenčina</a></li><li class="interlanguage-link interwiki-uk"><a href="https://uk.wikipedia.org/wiki/%D0%A1%D1%82%D1%80%D0%B0%D1%82%D0%B5%D0%B3%D1%96%D1%97_%D0%BE%D0%B1%D1%87%D0%B8%D1%81%D0%BB%D0%B5%D0%BD%D0%BD%D1%8F" title="Стратегії обчислення – Ukrainian" lang="uk" hreflang="uk" class="interlanguage-link-target">Українська</a></li><li class="interlanguage-link interwiki-zh"><a href="https://zh.wikipedia.org/wiki/%E6%B1%82%E5%80%BC%E7%AD%96%E7%95%A5" title="求值策略 – Chinese" lang="zh" hreflang="zh" class="interlanguage-link-target">中文</a></li>					</ul>/n				<div class="after-portlet after-portlet-lang"><span class="wb-langlinks-edit wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q2881121#sitelinks-wikipedia" title="Edit interlanguage links" class="wbc-editpage">Edit links</a></span></div>			</div>/n		</div>/n				</div>/n		</div>/n		<div id="footer" role="contentinfo">/n							<ul id="footer-info">/n											<li id="footer-info-lastmod"> This page was last edited on 19 September 2017, at 18:07.</li>/n											<li id="footer-info-copyright">Text is available under the <a rel="license" href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;/nadditional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>/n									</ul>/n							<ul id="footer-places">/n											<li id="footer-places-privacy"><a href="https://wikimediafoundation.org/wiki/Privacy_policy" class="extiw" title="wmf:Privacy policy">Privacy policy</a></li>/n											<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>/n											<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>/n											<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>/n											<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>/n											<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>/n											<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=Evaluation_strategy&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>/n									</ul>/n										<ul id="footer-icons" class="noprint">/n											<li id="footer-copyrightico">/n							<a href="https://wikimediafoundation.org/"><img src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88" height="31" alt="Wikimedia Foundation"/></a>						</li>/n											<li id="footer-poweredbyico">/n							<a href="//www.mediawiki.org/"><img src="/static/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88" height="31"/></a>						</li>/n									</ul>/n						<div style="clear:both"></div>/n		</div>/n		<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.284","walltime":"0.352","ppvisitednodes":{"value":1519,"limit":1000000},"ppgeneratednodes":{"value":0,"limit":1500000},"postexpandincludesize":{"value":44265,"limit":2097152},"templateargumentsize":{"value":1670,"limit":2097152},"expansiondepth":{"value":12,"limit":40},"expensivefunctioncount":{"value":5,"limit":500},"entityaccesscount":{"value":0,"limit":400},"timingprofile":["100.00%  291.662      1 -total"," 25.84%   75.358      1 Template:Reflist"," 22.08%   64.413     10 Template:Cite_web"," 14.28%   41.645      1 Template:Clarify"," 13.05%   38.057      1 Template:Fix-span"," 12.32%   35.945      2 Template:Citation_needed"," 10.99%   32.064      2 Template:Fix"," 10.31%   30.067      6 Template:Category_handler","  9.69%   28.248      3 Template:Delink","  7.69%   22.416      1 Template:Programming_evaluation"]},"scribunto":{"limitreport-timeusage":{"value":"0.145","limit":"10.000"},"limitreport-memusage":{"value":5729526,"limit":52428800}},"cachereport":{"origin":"mw1186","timestamp":"20171018195730","ttl":1900800,"transientcontent":false}}});});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":76,"wgHostname":"mw1275"});});</script>/n	</body>/n</html>/n