<!DOCTYPE html>/n<html class="client-nojs" lang="en" dir="ltr">/n<head>/n<meta charset="UTF-8"/>/n<title>Type inference - Wikipedia</title>/n<script>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</script>/n<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Type_inference","wgTitle":"Type inference","wgCurRevisionId":800068166,"wgRevisionId":800068166,"wgArticleId":279690,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Webarchive template wayback links","Articles with example code","Type systems","Type theory","Inference","Type inference"],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgPageContentModel":"wikitext","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"Type_inference","wgRelevantArticleId":279690,"wgRequestId":"WfgrHApAEK4AAB2E-gQAAAAY","wgIsProbablyEditable":true,"wgRelevantPageIsProbablyEditable":true,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgFlaggedRevsParams":{"tags":{}},"wgStableRevisionId":null,"wgWikiEditorEnabledModules":{"toolbar":true,"preview":false,"publish":false},"wgBetaFeaturesFeatures":[],"wgMediaViewerOnClick":true,"wgMediaViewerEnabledByDefault":false,"wgPopupsShouldSendModuleToUser":true,"wgPopupsConflictsWithNavPopupGadget":false,"wgVisualEditor":{"pageLanguageCode":"en","pageLanguageDir":"ltr","pageVariantFallbacks":"en","usePageImages":true,"usePageDescriptions":true},"wgPreferredVariant":"en","wgMFExpandAllSectionsUserOption":false,"wgMFDisplayWikibaseDescriptions":{"search":true,"nearby":true,"watchlist":true,"tagline":false},"wgRelatedArticles":null,"wgRelatedArticlesUseCirrusSearch":true,"wgRelatedArticlesOnlyUseCirrusSearch":false,"wgULSCurrentAutonym":"English","wgNoticeProject":"wikipedia","wgCentralNoticeCookiesToDelete":[],"wgCentralNoticeCategoriesUsingLegacy":["Fundraising","fundraising"],"wgCategoryTreePageCategoryOptions":"{\"mode\":0,\"hideprefix\":20,\"showcount\":true,\"namespaces\":false}","wgWikibaseItemId":"Q586459","wgCentralAuthMobileDomain":false,"wgCodeMirrorEnabled":false,"wgVisualEditorToolbarScrollOffset":0,"wgVisualEditorUnsupportedEditParams":["undo","undoafter","veswitched"],"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"ext.gadget.charinsert-styles":"ready","ext.globalCssJs.user.styles":"ready","ext.globalCssJs.site.styles":"ready","site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"ready","user.tokens":"loading","ext.pygments":"ready","ext.cite.styles":"ready","wikibase.client.init":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","ext.uls.interlanguage":"ready","ext.wikimediaBadges":"ready","skins.vector.styles.experimental.print":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready","mediawiki.skinning.interface":"ready","skins.vector.styles":"ready","ext.globalCssJs.user":"ready","ext.globalCssJs.site":"ready"});mw.loader.implement("user.tokens@1dqfd7l",function ( $, jQuery, require, module ) {/nmw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*//n/n});mw.loader.load(["ext.cite.a11y","site","mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.toc","mediawiki.searchSuggest","ext.gadget.teahouse","ext.gadget.ReferenceTooltips","ext.gadget.watchlist-notice","ext.gadget.DRN-wizard","ext.gadget.charinsert","ext.gadget.refToolbar","ext.gadget.extra-toolbar-buttons","ext.gadget.switcher","ext.centralauth.centralautologin","ext.popups","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","ext.eventLogging.subscriber","ext.wikimediaEvents","ext.navigationTiming","ext.uls.eventlogger","ext.uls.init","ext.uls.interface","ext.centralNotice.geoIP","ext.centralNotice.startUp","skins.vector.js"]);});</script>/n<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.cite.styles%7Cext.pygments%2CwikimediaBadges%7Cext.uls.interlanguage%7Cext.visualEditor.desktopArticleTarget.noscript%7Cmediawiki.legacy.commonPrint%2Cshared%7Cmediawiki.sectionAnchor%7Cmediawiki.skinning.interface%7Cskins.vector.styles%7Cskins.vector.styles.experimental.print%7Cwikibase.client.init&amp;only=styles&amp;skin=vector"/>/n<script async="" src="/w/load.php?debug=false&amp;lang=en&amp;modules=startup&amp;only=scripts&amp;skin=vector"></script>/n<meta name="ResourceLoaderDynamicStyles" content=""/>/n<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=ext.gadget.charinsert-styles&amp;only=styles&amp;skin=vector"/>/n<link rel="stylesheet" href="/w/load.php?debug=false&amp;lang=en&amp;modules=site.styles&amp;only=styles&amp;skin=vector"/>/n<meta name="generator" content="MediaWiki 1.31.0-wmf.4"/>/n<meta name="referrer" content="origin-when-cross-origin"/>/n<link rel="alternate" href="android-app://org.wikipedia/http/en.m.wikipedia.org/wiki/Type_inference"/>/n<link rel="alternate" type="application/x-wiki" title="Edit this page" href="/w/index.php?title=Type_inference&amp;action=edit"/>/n<link rel="edit" title="Edit this page" href="/w/index.php?title=Type_inference&amp;action=edit"/>/n<link rel="apple-touch-icon" href="/static/apple-touch/wikipedia.png"/>/n<link rel="shortcut icon" href="/static/favicon/wikipedia.ico"/>/n<link rel="search" type="application/opensearchdescription+xml" href="/w/opensearch_desc.php" title="Wikipedia (en)"/>/n<link rel="EditURI" type="application/rsd+xml" href="//en.wikipedia.org/w/api.php?action=rsd"/>/n<link rel="license" href="//creativecommons.org/licenses/by-sa/3.0/"/>/n<link rel="canonical" href="https://en.wikipedia.org/wiki/Type_inference"/>/n<link rel="dns-prefetch" href="//login.wikimedia.org"/>/n<link rel="dns-prefetch" href="//meta.wikimedia.org" />/n<!--[if lt IE 9]><script src="/w/load.php?debug=false&amp;lang=en&amp;modules=html5shiv&amp;only=scripts&amp;skin=vector&amp;sync=1"></script><![endif]-->/n</head>/n<body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Type_inference rootpage-Type_inference vector-experimental-print-styles vector-nav-directionality skin-vector action-view">		<div id="mw-page-base" class="noprint"></div>/n		<div id="mw-head-base" class="noprint"></div>/n		<div id="content" class="mw-body" role="main">/n			<a id="top"></a>/n/n							<div id="siteNotice" class="mw-body-content"><!-- CentralNotice --></div>/n						<div class="mw-indicators mw-body-content">/n</div>/n			<h1 id="firstHeading" class="firstHeading" lang="en">Type inference</h1>/n									<div id="bodyContent" class="mw-body-content">/n									<div id="siteSub" class="noprint">From Wikipedia, the free encyclopedia</div>/n								<div id="contentSub"></div>/n												<div id="jump-to-nav" class="mw-jump">/n					Jump to:					<a href="#mw-head">navigation</a>, 					<a href="#p-search">search</a>/n				</div>/n				<div id="mw-content-text" lang="en" dir="ltr" class="mw-content-ltr"><div class="mw-parser-output"><table class="vertical-navbox nowraplinks" style="float:right;clear:right;width:22.0em;margin:0 0 1.0em 1.0em;background:#f9f9f9;border:1px solid #aaa;padding:0.2em;border-spacing:0.4em 0;text-align:center;line-height:1.4em;font-size:88%;margin-top: 0.5em;">/n<tr>/n<th style="background-color: rgba(51, 153, 255, 0.15);;padding:0.2em 0.4em 0.2em;font-size:145%;line-height:1.2em"><a href="/wiki/Type_system" title="Type system">Type systems</a></th>/n</tr>/n<tr>/n<th style="padding:0.1em;background-color: rgba(51, 153, 255, 0.15);">General concepts</th>/n</tr>/n<tr>/n<td style="padding:0 0.1em 0.4em;text-align: left;">/n<ul>/n<li><a href="/wiki/Type_safety" title="Type safety">Type safety</a></li>/n</ul>/n</td>/n</tr>/n<tr>/n<th style="padding:0.1em;background-color: rgba(51, 153, 255, 0.15);">Major categories</th>/n</tr>/n<tr>/n<td style="padding:0 0.1em 0.4em;text-align: left;">/n<ul>/n<li><a href="/wiki/Type_system#Static_type_checking" title="Type system">Static</a> vs. <a href="/wiki/Type_system#Dynamic_type_checking_and_runtime_type_information" title="Type system">dynamic</a></li>/n<li><a href="/wiki/Manifest_typing" title="Manifest typing">Manifest</a> vs. <a class="mw-selflink selflink">inferred</a></li>/n<li><a href="/wiki/Nominal_type_system" title="Nominal type system">Nominal</a> vs. <a href="/wiki/Structural_type_system" title="Structural type system">structural</a></li>/n<li><a href="/wiki/Duck_typing" title="Duck typing">Duck typing</a></li>/n</ul>/n</td>/n</tr>/n<tr>/n<th style="padding:0.1em;background-color: rgba(51, 153, 255, 0.15);">Minor categories</th>/n</tr>/n<tr>/n<td style="padding:0 0.1em 0.4em;text-align: left;">/n<ul>/n<li><a href="/wiki/Dependent_type" title="Dependent type">Dependent</a></li>/n<li><a href="/wiki/Flow-sensitive_typing" title="Flow-sensitive typing">Flow-sensitive</a></li>/n<li><a href="/wiki/Gradual_typing" title="Gradual typing">Gradual</a></li>/n<li><a href="/wiki/Latent_typing" title="Latent typing">Latent</a></li>/n<li><a href="/wiki/Substructural_type_system" title="Substructural type system">Substructural</a></li>/n<li><a href="/wiki/Uniqueness_type" title="Uniqueness type">Unique</a></li>/n</ul>/n</td>/n</tr>/n<tr>/n<th style="padding:0.1em;background-color: rgba(51, 153, 255, 0.15);">See also</th>/n</tr>/n<tr>/n<td style="padding:0 0.1em 0.4em;text-align: left;">/n<ul>/n<li><a href="/wiki/Strong_and_weak_typing" title="Strong and weak typing">Strong and weak typing</a></li>/n</ul>/n</td>/n</tr>/n</table>/n<p><b>Type inference</b> refers to the automatic deduction of the <a href="/wiki/Data_type" title="Data type">data type</a> of an expression in a <a href="/wiki/Programming_language" title="Programming language">programming language</a>.</p>/n<p>It is a feature present in some <a href="/wiki/Strongly-typed_programming_language" class="mw-redirect" title="Strongly-typed programming language">strongly</a> <a href="/wiki/Type_system#Static_typing" title="Type system">statically typed</a> languages. It is often characteristic of <a href="/wiki/Functional_programming_language" class="mw-redirect" title="Functional programming language">functional programming languages</a> in general. Some languages that include type inference include <a href="/wiki/C%2B%2B11" title="C++11">C++11</a>, <a href="/wiki/C_Sharp_3.0#Local_variable_type_inference" title="C Sharp 3.0">C#</a> (starting with version 3.0), <a href="/wiki/Chapel_(programming_language)" title="Chapel (programming language)">Chapel</a>, <a href="/wiki/Clean_(programming_language)" title="Clean (programming language)">Clean</a>, <a href="/wiki/Crystal_(programming_language)" title="Crystal (programming language)">Crystal</a>, <a href="/wiki/D_(programming_language)" title="D (programming language)">D</a>, <a href="/wiki/F_Sharp_(programming_language)" title="F Sharp (programming language)">F#</a>, <a href="/wiki/FreeBASIC" title="FreeBASIC">FreeBASIC</a>, <a href="/wiki/Go_(programming_language)" title="Go (programming language)">Go</a>, <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a>, <a href="/wiki/Julia_(programming_language)" title="Julia (programming language)">Julia</a>, <a href="/wiki/Kotlin_(programming_language)" title="Kotlin (programming language)">Kotlin</a>, <a href="/wiki/ML_(programming_language)" title="ML (programming language)">ML</a>, <a href="/wiki/Nim_(programming_language)" title="Nim (programming language)">Nim</a>, <a href="/wiki/OCaml" title="OCaml">OCaml</a>, <a href="/wiki/Opa_(programming_language)" title="Opa (programming language)">Opa</a>, <a href="/wiki/RPython" class="mw-redirect" title="RPython">RPython</a>, <a href="/wiki/Rust_(programming_language)" title="Rust (programming language)">Rust</a>, <a href="/wiki/Scala_(programming_language)" title="Scala (programming language)">Scala</a>, <a href="/wiki/Swift_(programming_language)" title="Swift (programming language)">Swift</a>, <a href="/wiki/Vala_(programming_language)" title="Vala (programming language)">Vala</a> and <a href="/wiki/Visual_Basic_.NET#2008_.28VB_9.0.29" title="Visual Basic .NET">Visual Basic</a> (starting with version 9.0). The majority of them use a simple form of type inference, while especially those ones who use the <a href="/wiki/Hindley%E2%80%93Milner_type_system" title="Hindley–Milner type system">Hindley-Milner type system</a> provide a more complete type inference. The ability to infer types automatically makes many programming tasks easier, leaving the programmer free to omit <a href="/wiki/Type_signature" title="Type signature">type annotations</a> while still permitting type checking.</p>/n<p></p>/n<div id="toc" class="toc">/n<div class="toctitle">/n<h2>Contents</h2>/n</div>/n<ul>/n<li class="toclevel-1 tocsection-1"><a href="#Nontechnical_explanation"><span class="tocnumber">1</span> <span class="toctext">Nontechnical explanation</span></a></li>/n<li class="toclevel-1 tocsection-2"><a href="#Technical_description"><span class="tocnumber">2</span> <span class="toctext">Technical description</span></a></li>/n<li class="toclevel-1 tocsection-3"><a href="#Example"><span class="tocnumber">3</span> <span class="toctext">Example</span></a></li>/n<li class="toclevel-1 tocsection-4"><a href="#Hindley.E2.80.93Milner_type_inference_algorithm"><span class="tocnumber">4</span> <span class="toctext">Hindley–Milner type inference algorithm</span></a></li>/n<li class="toclevel-1 tocsection-5"><a href="#Side-effects_of_using_the_most_general_type"><span class="tocnumber">5</span> <span class="toctext">Side-effects of using the most general type</span></a></li>/n<li class="toclevel-1 tocsection-6"><a href="#References"><span class="tocnumber">6</span> <span class="toctext">References</span></a></li>/n<li class="toclevel-1 tocsection-7"><a href="#External_links"><span class="tocnumber">7</span> <span class="toctext">External links</span></a></li>/n</ul>/n</div>/n<p></p>/n<h2><span class="mw-headline" id="Nontechnical_explanation">Nontechnical explanation</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Type_inference&amp;action=edit&amp;section=1" title="Edit section: Nontechnical explanation">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<p>In most programming languages, all values have a <a href="/wiki/Data_type" title="Data type">data type</a> explicitly declared at <a href="/wiki/Compile_time" title="Compile time">compile time</a>, limiting the values a particular expression can take on at <a href="/wiki/Run_time_(program_lifecycle_phase)" title="Run time (program lifecycle phase)">run-time</a>. Increasingly, <a href="/wiki/Just-in-time_compilation" title="Just-in-time compilation">just-in-time compilation</a> renders the distinction between run time and compile time moot. However, historically, if the type of a value is known only at run-time, these languages are <a href="/wiki/Dynamically_typed" class="mw-redirect" title="Dynamically typed">dynamically typed</a>. In other languages, the type of an expression is known only at <a href="/wiki/Compile_time" title="Compile time">compile time</a>; these languages are <a href="/wiki/Statically_typed" class="mw-redirect" title="Statically typed">statically typed</a>. In statically typed languages, the input and output types of functions and <a href="/wiki/Local_variable" title="Local variable">local variables</a> ordinarily must be explicitly provided by type annotations. For example, in <a href="/wiki/C_(programming_language)" title="C (programming language)">C</a>:</p>/n<div class="mw-highlight mw-content-ltr" dir="ltr">/n<pre>/n<span class="kt">int</span> <span class="nf">addone</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">)</span> <span class="p">{</span>/n    <span class="kt">int</span> <span class="n">result</span><span class="p">;</span> <span class="cm">/* declare integer result */</span>/n/n    <span class="n">result</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>/n    <span class="k">return</span> <span class="n">result</span><span class="p">;</span>/n<span class="p">}</span>/n</pre></div>/n<p>The <a href="/wiki/Type_signature" title="Type signature">signature</a> of this function definition, <code>int addone(int x)</code>, declares that <code>addone</code> is a function that takes one argument, an <a href="/wiki/Integer_(computer_science)" title="Integer (computer science)">integer</a>, and returns an integer. <code>int result;</code> declares that the local variable <code>result</code> is an integer. In a hypothetical language supporting type inference, the code might be written like this instead:</p>/n<div class="mw-highlight mw-content-ltr" dir="ltr">/n<pre>/n <span class="nx">addone</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>/n     <span class="kd">var</span> <span class="nx">result</span><span class="p">;</span>  <span class="cm">/* inferred-type variable result */</span>/n     <span class="kd">var</span> <span class="nx">result2</span><span class="p">;</span> <span class="cm">/* inferred-type variable result #2 */</span>/n/n     <span class="nx">result</span> <span class="o">=</span> <span class="nx">x</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>/n     <span class="nx">result2</span> <span class="o">=</span> <span class="nx">x</span> <span class="o">+</span> <span class="mf">1.0</span><span class="p">;</span>  <span class="cm">/* this line won't work (in the proposed language) */</span>/n     <span class="k">return</span> <span class="nx">result</span><span class="p">;</span>/n <span class="p">}</span>/n</pre></div>/n<p>This is identical to how code is written in the language <a href="/wiki/Dart_(programming_language)" title="Dart (programming language)">Dart</a>, except that it is subject to some added constraints as described below. It would be possible to <i>infer</i> the types of all the variables at compile time. In the example above, the compiler would infer that <code>result</code> and <code>x</code> have type integer since the constant <code>1</code> is type integer, and hence that <code>addone</code> is a function <code>int -&gt; int</code>. The variable <code>result2</code> isn't used in a legal manner, so it wouldn't have a type.</p>/n<p>In the imaginary language in which the last example is written, the compiler would assume that, in the absence of information to the contrary, <code>+</code> takes two integers and returns one integer. (This is how it works in, for example, <a href="/wiki/OCaml" title="OCaml">OCaml</a>.) From this, the type inferencer can infer that the type of <code>x + 1</code> is an integer, which means <code>result</code> is an integer and thus the return value of <code>addone</code> is an integer. Similarly, since <code>+</code> requires both of its arguments be of the same type, <code>x</code> must be an integer, and thus, <code>addone</code> accepts one integer as an argument.</p>/n<p>However, in the subsequent line, <i>result2</i> is calculated by adding a decimal <code>1.0</code> with floating-point arithmetic, causing a conflict in the use of <code>x</code> for both integer and floating-point expressions. The correct type-inference algorithm for such a situation has been known <a href="#Hindley.E2.80.93Milner_type_inference_algorithm">since 1958</a> and has been known to be correct since 1982. It revisits the prior inferences and uses the most general type from the outset: in this case floating-point. This can however have detrimental implications, for instance using a floating-point from the outset can introduce precision issues that would have not been there with an integer type.</p>/n<p>Frequently, however, degenerate type-inference algorithms are used that cannot backtrack and instead generate an error message in such a situation. This behavior may be preferable as type inference may not always be neutral algorithmically, as illustrated by the prior floating-point precision issue.</p>/n<p>An algorithm of intermediate generality implicitly declares <i>result2</i> as a floating-point variable, and the addition implicitly converts <code>x</code> to a floating point. This can be correct if the calling contexts never supply a floating point argument. Such a situation shows the difference between <i>type inference</i>, which does not involve <a href="/wiki/Type_conversion" title="Type conversion">type conversion</a>, and <a href="/wiki/Implicit_type_conversion" class="mw-redirect" title="Implicit type conversion">implicit type conversion</a>, which forces data to a different data type, often without restrictions.</p>/n<p>Finally, a significant downside of complex type-inference algorithm is that the resulting type inference resolution is not going to be obvious to humans (notably because of the backtracking), which can be detrimental as code is primarily intended to be comprehensible to humans.</p>/n<p>The recent emergence of <a href="/wiki/Just-in-time_compilation" title="Just-in-time compilation">just-in-time compilation</a> allows for hybrid approaches where the type of arguments supplied by the various calling context is known at compile time, and can generate a large number of compiled versions of the same function. Each compiled version can then be optimized for a different set of types. For instance, JIT compilation allows there to be at least two compiled versions of <i>addone</i>:</p>/n<dl>/n<dd>A version that accepts an integer input and uses implicit type conversion.</dd>/n<dd>A version that accepts a floating-point number as input and uses floating point instructions throughout.</dd>/n</dl>/n<h2><span class="mw-headline" id="Technical_description">Technical description</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Type_inference&amp;action=edit&amp;section=2" title="Edit section: Technical description">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<p>Type inference is the ability to automatically deduce, either partially or fully, the type of an expression at compile time. The compiler is often able to infer the type of a variable or the <a href="/wiki/Type_signature" title="Type signature">type signature</a> of a function, without explicit type annotations having been given. In many cases, it is possible to omit type annotations from a program completely if the type inference system is robust enough, or the program or language is simple enough.</p>/n<p>To obtain the information required to infer the type of an expression, the compiler either gathers this information as an aggregate and subsequent reduction of the type annotations given for its subexpressions, or through an implicit understanding of the type of various atomic values (e.g. true&#160;: Bool; 42&#160;: Integer; 3.14159&#160;: Real; etc.). It is through recognition of the eventual reduction of expressions to implicitly typed atomic values that the compiler for a type inferring language is able to compile a program completely without type annotations.</p>/n<p>In complex forms of <a href="/wiki/Higher-order_programming" title="Higher-order programming">higher-order programming</a> and <a href="/wiki/Polymorphism_(computer_science)" title="Polymorphism (computer science)">polymorphism</a>, it is not always possible for the compiler to infer as much, and type annotations are occasionally necessary for disambiguation. For instance, type inference with <a href="/wiki/Polymorphic_recursion" title="Polymorphic recursion">polymorphic recursion</a> is known to be undecidable. Furthermore, explicit type annotations can be used to optimize code by forcing the compiler to use a more specific (faster/smaller) type than it had inferred.<sup id="cite_ref-1" class="reference"><a href="#cite_note-1">[1]</a></sup></p>/n<p>Relative to <a href="/wiki/Program_analysis" title="Program analysis">program analysis</a>, type inference is a special case of <a href="/wiki/Points-to_analysis" class="mw-redirect" title="Points-to analysis">points-to analysis</a> that uses a type abstraction on pointer targets.</p>/n<h2><span class="mw-headline" id="Example">Example</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Type_inference&amp;action=edit&amp;section=3" title="Edit section: Example">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<p>For example, let us consider the <a href="/wiki/Haskell_(programming_language)" title="Haskell (programming language)">Haskell</a> function <code>map</code>, which applies a function to each element of a list, and may be defined as:</p>/n<div class="mw-highlight mw-content-ltr" dir="ltr">/n<pre>/n <span class="n">map</span> <span class="n">f</span> <span class="kt">[]</span> <span class="ow">=</span> <span class="kt">[]</span>/n <span class="n">map</span> <span class="n">f</span> <span class="p">(</span><span class="n">first</span><span class="kt">:</span><span class="n">rest</span><span class="p">)</span> <span class="ow">=</span> <span class="n">f</span> <span class="n">first</span> <span class="kt">:</span> <span class="n">map</span> <span class="n">f</span> <span class="n">rest</span>/n</pre></div>/n<p>Type inference on the <code>map</code> function proceeds (intuitively) as follows. <code>map</code> is a function of two arguments, so its type is constrained to be of the form <code>a → b → c</code>. In Haskell, the patterns <code>[]</code> and <code>(first:rest)</code> always match lists, so the second argument must be a list type: <code>b = [d]</code> for some type <code>d</code>. Its first argument <code>f</code> is <a href="/wiki/Function_application" title="Function application">applied</a> to the argument <code>first</code>, which must have type <code>d</code>, corresponding with the type in the list argument, so <code>f&#160;:: d → e</code> (<code>::</code> means "is of type") for some type <code>e</code>. The return value of <code>map f</code>, finally, is a list of whatever <code>f</code> produces, so <code>[e]</code>.</p>/n<p>Putting the parts together, we obtain <code>map&#160;:: (d → e) → [d] → [e]</code>. Nothing is special about the type variables, so we can simply relabel this as</p>/n<div class="mw-highlight mw-content-ltr" dir="ltr">/n<pre>/n <span class="n">map</span> <span class="ow">::</span> <span class="p">(</span><span class="n">a</span> <span class="err">→</span> <span class="n">b</span><span class="p">)</span> <span class="err">→</span> <span class="p">[</span><span class="n">a</span><span class="p">]</span> <span class="err">→</span> <span class="p">[</span><span class="n">b</span><span class="p">]</span>/n</pre></div>/n<p>It turns out that this is also the most general type, since no further constraints apply. Note that the inferred type of <code>map</code> is <a href="/wiki/Parametric_polymorphism" title="Parametric polymorphism">parametrically polymorphic</a>: The type of the arguments and results of <code>f</code> are not inferred, but left as type variables, and so <code>map</code> can be applied to functions and lists of various types, as long as the actual types match in each invocation.</p>/n<h2><span id="Hindley–Milner_type_inference_algorithm"></span><span class="mw-headline" id="Hindley.E2.80.93Milner_type_inference_algorithm"><span id="algorithm"></span>Hindley–Milner type inference algorithm</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Type_inference&amp;action=edit&amp;section=4" title="Edit section: Hindley–Milner type inference algorithm">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<div role="note" class="hatnote navigation-not-searchable">Main article: <a href="/wiki/Hindley%E2%80%93Milner_type_system" title="Hindley–Milner type system">Hindley–Milner type system</a></div>/n<p>The algorithm first used to perform type inference is now informally termed the Hindley–Milner algorithm, although the algorithm should properly be attributed to Damas and Milner.<sup id="cite_ref-Damas-and-Milner-1982_2-0" class="reference"><a href="#cite_note-Damas-and-Milner-1982-2">[2]</a></sup></p>/n<p>The origin of this algorithm is the type inference algorithm for the <a href="/wiki/Simply_typed_lambda_calculus" title="Simply typed lambda calculus">simply typed lambda calculus</a> that was devised by <a href="/wiki/Haskell_Curry" title="Haskell Curry">Haskell Curry</a> and <a href="/wiki/Robert_Feys" title="Robert Feys">Robert Feys</a> in 1958. In 1969 <a href="/wiki/J._Roger_Hindley" title="J. Roger Hindley">J. Roger Hindley</a> extended this work and proved that their algorithm always inferred the most general type. In 1978 <a href="/wiki/Robin_Milner" title="Robin Milner">Robin Milner</a>,<sup id="cite_ref-3" class="reference"><a href="#cite_note-3">[3]</a></sup> independently of Hindley's work, provided an equivalent algorithm, <a href="/wiki/Algorithm_W" class="mw-redirect" title="Algorithm W">Algorithm W</a>. In 1982 <a href="/w/index.php?title=Luis_Damas&amp;action=edit&amp;redlink=1" class="new" title="Luis Damas (page does not exist)">Luis Damas</a><sup id="cite_ref-Damas-and-Milner-1982_2-1" class="reference"><a href="#cite_note-Damas-and-Milner-1982-2">[2]</a></sup> finally proved that Milner's algorithm is complete and extended it to support systems with polymorphic references.</p>/n<h2><span class="mw-headline" id="Side-effects_of_using_the_most_general_type">Side-effects of using the most general type</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Type_inference&amp;action=edit&amp;section=5" title="Edit section: Side-effects of using the most general type">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<p>By design, type inference, especially correct (backtracking) type inference will introduce use of the most general type appropriate, however this can have implications as more general types may not always be algorithmically neutral, the typical cases being:</p>/n<ul>/n<li>floating-point being considered as a general type of integer, while floating-point will introduce precision issues</li>/n<li>variant/dynamic types being considered as a general type of other types, which will introduce casting rules and comparison that could be different, for instance such types use the '+' operator for both numeric additions and string concatenations, but what operation is performed is determined dynamically rather than statically</li>/n</ul>/n<h2><span class="mw-headline" id="References">References</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Type_inference&amp;action=edit&amp;section=6" title="Edit section: References">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<div class="reflist" style="list-style-type: decimal;">/n<div class="mw-references-wrap">/n<ol class="references">/n<li id="cite_note-1"><span class="mw-cite-backlink"><b><a href="#cite_ref-1">^</a></b></span> <span class="reference-text"><cite class="citation book">Bryan O'Sullivan; Don Stewart; John Goerzen (2008). "Chapter 25. Profiling and optimization". <a rel="nofollow" class="external text" href="http://book.realworldhaskell.org/read/profiling-and-optimization.html"><i>Real World Haskell</i></a>. O'Reilly.</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AType+inference&amp;rft.atitle=Chapter+25.+Profiling+and+optimization&amp;rft.au=Bryan+O%27Sullivan&amp;rft.au=Don+Stewart&amp;rft.au=John+Goerzen&amp;rft.btitle=Real+World+Haskell&amp;rft.date=2008&amp;rft.genre=bookitem&amp;rft.pub=O%27Reilly&amp;rft_id=http%3A%2F%2Fbook.realworldhaskell.org%2Fread%2Fprofiling-and-optimization.html&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>/n<li id="cite_note-Damas-and-Milner-1982-2"><span class="mw-cite-backlink">^ <a href="#cite_ref-Damas-and-Milner-1982_2-0"><sup><i><b>a</b></i></sup></a> <a href="#cite_ref-Damas-and-Milner-1982_2-1"><sup><i><b>b</b></i></sup></a></span> <span class="reference-text"><cite id="CITEREFDamasMilner1982" class="citation">Damas, Luis; Milner, Robin (1982), "Principal type-schemes for functional programs", <a rel="nofollow" class="external text" href="http://groups.csail.mit.edu/pag/6.883/readings/p207-damas.pdf"><i>POPL '82: Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on principles of programming languages</i></a> <span style="font-size:85%;">(PDF)</span>, ACM, pp.&#160;207–212</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AType+inference&amp;rft.atitle=Principal+type-schemes+for+functional+programs&amp;rft.au=Milner%2C+Robin&amp;rft.aufirst=Luis&amp;rft.aulast=Damas&amp;rft.btitle=POPL+%2782%3A+Proceedings+of+the+9th+ACM+SIGPLAN-SIGACT+symposium+on+principles+of+programming+languages&amp;rft.date=1982&amp;rft.genre=bookitem&amp;rft.pages=207-212&amp;rft.pub=ACM&amp;rft_id=http%3A%2F%2Fgroups.csail.mit.edu%2Fpag%2F6.883%2Freadings%2Fp207-damas.pdf&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Abook" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>/n<li id="cite_note-3"><span class="mw-cite-backlink"><b><a href="#cite_ref-3">^</a></b></span> <span class="reference-text"><cite id="CITEREFMilner1978" class="citation">Milner, Robin (1978), "A Theory of Type Polymorphism in Programming", <i>Jcss</i>, <b>17</b>: 348–375</cite><span title="ctx_ver=Z39.88-2004&amp;rfr_id=info%3Asid%2Fen.wikipedia.org%3AType+inference&amp;rft.atitle=A+Theory+of+Type+Polymorphism+in+Programming&amp;rft.aufirst=Robin&amp;rft.aulast=Milner&amp;rft.date=1978&amp;rft.genre=article&amp;rft.jtitle=Jcss&amp;rft.pages=348-375&amp;rft.volume=17&amp;rft_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Ajournal" class="Z3988"><span style="display:none;">&#160;</span></span></span></li>/n</ol>/n</div>/n</div>/n<h2><span class="mw-headline" id="External_links">External links</span><span class="mw-editsection"><span class="mw-editsection-bracket">[</span><a href="/w/index.php?title=Type_inference&amp;action=edit&amp;section=7" title="Edit section: External links">edit</a><span class="mw-editsection-bracket">]</span></span></h2>/n<ul>/n<li><a rel="nofollow" class="external text" href="http://www.cis.upenn.edu/~bcpierce/types/archives/1988/msg00042.html">Archived e-mail message</a> by Roger Hindley, explains history of type inference</li>/n<li><a rel="nofollow" class="external text" href="http://www.brics.dk/~mis/typeinf.pdf">Polymorphic Type Inference</a> by Michael Schwartzbach, gives an overview of Polymorphic type inference.</li>/n<li><a rel="nofollow" class="external text" href="http://lucacardelli.name/Papers/BasicTypechecking.pdf">Basic Typechecking</a> paper by Luca Cardelli, describes algorithm, includes implementation in <a href="/wiki/Modula-2" title="Modula-2">Modula-2</a></li>/n<li><a rel="nofollow" class="external text" href="http://dysphoria.net/2009/06/28/hindley-milner-type-inference-in-scala/">Implementation</a> of Hindley-Milner type inference in <a href="/wiki/Scala_(programming_language)" title="Scala (programming language)">Scala</a>, by Andrew Forrest (retrieved July 30, 2009)</li>/n<li><a rel="nofollow" class="external text" href="https://web.archive.org/web/20070218103011/http://www.cs.berkeley.edu/~nikitab/courses/cs263/hm.html">Implementation of Hindley-Milner in Perl 5, by Nikita Borisov</a> at the <a href="/wiki/Wayback_Machine" title="Wayback Machine">Wayback Machine</a> (archived February 18, 2007)</li>/n<li><a rel="nofollow" class="external text" href="http://www.codecommit.com/blog/scala/what-is-hindley-milner-and-why-is-it-cool">What is Hindley-Milner? (and why is it cool?)</a> Explains Hindley-Milner, examples in Scala</li>/n</ul>/n/n/n<!-- /nNewPP limit report/nParsed by mw1213/nCached time: 20171025100818/nCache expiry: 1900800/nDynamic content: false/nCPU time usage: 0.120 seconds/nReal time usage: 0.606 seconds/nPreprocessor visited node count: 374/1000000/nPreprocessor generated node count: 0/1500000/nPost‐expand include size: 11842/2097152 bytes/nTemplate argument size: 78/2097152 bytes/nHighest expansion depth: 7/40/nExpensive parser function count: 0/500/nLua time usage: 0.045/10.000 seconds/nLua memory usage: 2.14 MB/50 MB/n-->/n<!--/nTransclusion expansion time report (%,ms,calls,template)/n100.00%  578.742      1 -total/n 11.75%   68.022      1 Template:Reflist/n  6.17%   35.719      1 Template:Cite_book/n  4.59%   26.593      1 Template:Type_systems/n  4.30%   24.868      1 Template:Sidebar/n  2.44%   14.115      2 Template:Citation/n  1.69%    9.802      1 Template:Main/n  1.24%    7.193      1 Template:Anchor/n  1.13%    6.535      1 Template:Webarchive/n  0.54%    3.134      1 Template:Main_other/n-->/n</div>/n<!-- Saved in parser cache with key enwiki:pcache:idhash:279690-0!canonical and timestamp 20171025100818 and revision id 800068166/n -->/n<noscript><img src="//en.wikipedia.org/wiki/Special:CentralAutoLogin/start?type=1x1" alt="" title="" width="1" height="1" style="border: none; position: absolute;" /></noscript></div>					<div class="printfooter">/n						Retrieved from "<a dir="ltr" href="https://en.wikipedia.org/w/index.php?title=Type_inference&amp;oldid=800068166">https://en.wikipedia.org/w/index.php?title=Type_inference&amp;oldid=800068166</a>"					</div>/n				<div id="catlinks" class="catlinks" data-mw="interface"><div id="mw-normal-catlinks" class="mw-normal-catlinks"><a href="/wiki/Help:Category" title="Help:Category">Categories</a>: <ul><li><a href="/wiki/Category:Type_systems" title="Category:Type systems">Type systems</a></li><li><a href="/wiki/Category:Type_theory" title="Category:Type theory">Type theory</a></li><li><a href="/wiki/Category:Inference" title="Category:Inference">Inference</a></li><li><a href="/wiki/Category:Type_inference" title="Category:Type inference">Type inference</a></li></ul></div><div id="mw-hidden-catlinks" class="mw-hidden-catlinks mw-hidden-cats-hidden">Hidden categories: <ul><li><a href="/wiki/Category:Webarchive_template_wayback_links" title="Category:Webarchive template wayback links">Webarchive template wayback links</a></li><li><a href="/wiki/Category:Articles_with_example_code" title="Category:Articles with example code">Articles with example code</a></li></ul></div></div>				<div class="visualClear"></div>/n							</div>/n		</div>/n		<div id="mw-navigation">/n			<h2>Navigation menu</h2>/n/n			<div id="mw-head">/n									<div id="p-personal" role="navigation" class="" aria-labelledby="p-personal-label">/n						<h3 id="p-personal-label">Personal tools</h3>/n						<ul>/n							<li id="pt-anonuserpage">Not logged in</li><li id="pt-anontalk"><a href="/wiki/Special:MyTalk" title="Discussion about edits from this IP address [n]" accesskey="n">Talk</a></li><li id="pt-anoncontribs"><a href="/wiki/Special:MyContributions" title="A list of edits made from this IP address [y]" accesskey="y">Contributions</a></li><li id="pt-createaccount"><a href="/w/index.php?title=Special:CreateAccount&amp;returnto=Type+inference" title="You are encouraged to create an account and log in; however, it is not mandatory">Create account</a></li><li id="pt-login"><a href="/w/index.php?title=Special:UserLogin&amp;returnto=Type+inference" title="You're encouraged to log in; however, it's not mandatory. [o]" accesskey="o">Log in</a></li>						</ul>/n					</div>/n									<div id="left-navigation">/n										<div id="p-namespaces" role="navigation" class="vectorTabs" aria-labelledby="p-namespaces-label">/n						<h3 id="p-namespaces-label">Namespaces</h3>/n						<ul>/n														<li id="ca-nstab-main" class="selected"><span><a href="/wiki/Type_inference" title="View the content page [c]" accesskey="c">Article</a></span></li>/n							<li id="ca-talk"><span><a href="/wiki/Talk:Type_inference" rel="discussion" title="Discussion about the content page [t]" accesskey="t">Talk</a></span></li>/n						</ul>/n					</div>/n										<div id="p-variants" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-variants-label">/n												<h3 id="p-variants-label">/n							<span>Variants</span>/n						</h3>/n/n						<div class="menu">/n							<ul>/n															</ul>/n						</div>/n					</div>/n									</div>/n				<div id="right-navigation">/n										<div id="p-views" role="navigation" class="vectorTabs" aria-labelledby="p-views-label">/n						<h3 id="p-views-label">Views</h3>/n						<ul>/n														<li id="ca-view" class="collapsible selected"><span><a href="/wiki/Type_inference">Read</a></span></li>/n							<li id="ca-edit" class="collapsible"><span><a href="/w/index.php?title=Type_inference&amp;action=edit" title="Edit this page [e]" accesskey="e">Edit</a></span></li>/n							<li id="ca-history" class="collapsible"><span><a href="/w/index.php?title=Type_inference&amp;action=history" title="Past revisions of this page [h]" accesskey="h">View history</a></span></li>/n						</ul>/n					</div>/n										<div id="p-cactions" role="navigation" class="vectorMenu emptyPortlet" aria-labelledby="p-cactions-label">/n						<h3 id="p-cactions-label"><span>More</span></h3>/n/n						<div class="menu">/n							<ul>/n															</ul>/n						</div>/n					</div>/n										<div id="p-search" role="search">/n						<h3>/n							<label for="searchInput">Search</label>/n						</h3>/n/n						<form action="/w/index.php" id="searchform">/n							<div id="simpleSearch">/n							<input type="search" name="search" placeholder="Search Wikipedia" title="Search Wikipedia [f]" accesskey="f" id="searchInput"/><input type="hidden" value="Special:Search" name="title"/><input type="submit" name="fulltext" value="Search" title="Search Wikipedia for this text" id="mw-searchButton" class="searchButton mw-fallbackSearchButton"/><input type="submit" name="go" value="Go" title="Go to a page with this exact name if it exists" id="searchButton" class="searchButton"/>							</div>/n						</form>/n					</div>/n									</div>/n			</div>/n			<div id="mw-panel">/n				<div id="p-logo" role="banner"><a class="mw-wiki-logo" href="/wiki/Main_Page"  title="Visit the main page"></a></div>/n						<div class="portal" role="navigation" id='p-navigation' aria-labelledby='p-navigation-label'>/n			<h3 id='p-navigation-label'>Navigation</h3>/n/n			<div class="body">/n									<ul>/n						<li id="n-mainpage-description"><a href="/wiki/Main_Page" title="Visit the main page [z]" accesskey="z">Main page</a></li><li id="n-contents"><a href="/wiki/Portal:Contents" title="Guides to browsing Wikipedia">Contents</a></li><li id="n-featuredcontent"><a href="/wiki/Portal:Featured_content" title="Featured content – the best of Wikipedia">Featured content</a></li><li id="n-currentevents"><a href="/wiki/Portal:Current_events" title="Find background information on current events">Current events</a></li><li id="n-randompage"><a href="/wiki/Special:Random" title="Load a random article [x]" accesskey="x">Random article</a></li><li id="n-sitesupport"><a href="https://donate.wikimedia.org/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_en.wikipedia.org&amp;uselang=en" title="Support us">Donate to Wikipedia</a></li><li id="n-shoplink"><a href="//shop.wikimedia.org" title="Visit the Wikipedia store">Wikipedia store</a></li>					</ul>/n							</div>/n		</div>/n			<div class="portal" role="navigation" id='p-interaction' aria-labelledby='p-interaction-label'>/n			<h3 id='p-interaction-label'>Interaction</h3>/n/n			<div class="body">/n									<ul>/n						<li id="n-help"><a href="/wiki/Help:Contents" title="Guidance on how to use and edit Wikipedia">Help</a></li><li id="n-aboutsite"><a href="/wiki/Wikipedia:About" title="Find out about Wikipedia">About Wikipedia</a></li><li id="n-portal"><a href="/wiki/Wikipedia:Community_portal" title="About the project, what you can do, where to find things">Community portal</a></li><li id="n-recentchanges"><a href="/wiki/Special:RecentChanges" title="A list of recent changes in the wiki [r]" accesskey="r">Recent changes</a></li><li id="n-contactpage"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us" title="How to contact Wikipedia">Contact page</a></li>					</ul>/n							</div>/n		</div>/n			<div class="portal" role="navigation" id='p-tb' aria-labelledby='p-tb-label'>/n			<h3 id='p-tb-label'>Tools</h3>/n/n			<div class="body">/n									<ul>/n						<li id="t-whatlinkshere"><a href="/wiki/Special:WhatLinksHere/Type_inference" title="List of all English Wikipedia pages containing links to this page [j]" accesskey="j">What links here</a></li><li id="t-recentchangeslinked"><a href="/wiki/Special:RecentChangesLinked/Type_inference" rel="nofollow" title="Recent changes in pages linked from this page [k]" accesskey="k">Related changes</a></li><li id="t-upload"><a href="/wiki/Wikipedia:File_Upload_Wizard" title="Upload files [u]" accesskey="u">Upload file</a></li><li id="t-specialpages"><a href="/wiki/Special:SpecialPages" title="A list of all special pages [q]" accesskey="q">Special pages</a></li><li id="t-permalink"><a href="/w/index.php?title=Type_inference&amp;oldid=800068166" title="Permanent link to this revision of the page">Permanent link</a></li><li id="t-info"><a href="/w/index.php?title=Type_inference&amp;action=info" title="More information about this page">Page information</a></li><li id="t-wikibase"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q586459" title="Link to connected data repository item [g]" accesskey="g">Wikidata item</a></li><li id="t-cite"><a href="/w/index.php?title=Special:CiteThisPage&amp;page=Type_inference&amp;id=800068166" title="Information on how to cite this page">Cite this page</a></li>					</ul>/n							</div>/n		</div>/n			<div class="portal" role="navigation" id='p-coll-print_export' aria-labelledby='p-coll-print_export-label'>/n			<h3 id='p-coll-print_export-label'>Print/export</h3>/n/n			<div class="body">/n									<ul>/n						<li id="coll-create_a_book"><a href="/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Type+inference">Create a book</a></li><li id="coll-download-as-rdf2latex"><a href="/w/index.php?title=Special:ElectronPdf&amp;page=Type+inference&amp;action=show-download-screen">Download as PDF</a></li><li id="t-print"><a href="/w/index.php?title=Type_inference&amp;printable=yes" title="Printable version of this page [p]" accesskey="p">Printable version</a></li>					</ul>/n							</div>/n		</div>/n			<div class="portal" role="navigation" id='p-lang' aria-labelledby='p-lang-label'>/n			<h3 id='p-lang-label'>Languages</h3>/n/n			<div class="body">/n									<ul>/n						<li class="interlanguage-link interwiki-de"><a href="https://de.wikipedia.org/wiki/Typinferenz" title="Typinferenz – German" lang="de" hreflang="de" class="interlanguage-link-target">Deutsch</a></li><li class="interlanguage-link interwiki-el"><a href="https://el.wikipedia.org/wiki/%CE%95%CE%BE%CE%B1%CE%B3%CF%89%CE%B3%CE%AE_%CF%84%CF%8D%CF%80%CF%89%CE%BD" title="Εξαγωγή τύπων – Greek" lang="el" hreflang="el" class="interlanguage-link-target">Ελληνικά</a></li><li class="interlanguage-link interwiki-es"><a href="https://es.wikipedia.org/wiki/Inferencia_de_tipos" title="Inferencia de tipos – Spanish" lang="es" hreflang="es" class="interlanguage-link-target">Español</a></li><li class="interlanguage-link interwiki-fr"><a href="https://fr.wikipedia.org/wiki/Inf%C3%A9rence_de_types" title="Inférence de types – French" lang="fr" hreflang="fr" class="interlanguage-link-target">Français</a></li><li class="interlanguage-link interwiki-ms"><a href="https://ms.wikipedia.org/wiki/Inferens_jenis" title="Inferens jenis – Malay" lang="ms" hreflang="ms" class="interlanguage-link-target">Bahasa Melayu</a></li><li class="interlanguage-link interwiki-nl"><a href="https://nl.wikipedia.org/wiki/Type-inferentie" title="Type-inferentie – Dutch" lang="nl" hreflang="nl" class="interlanguage-link-target">Nederlands</a></li><li class="interlanguage-link interwiki-ja"><a href="https://ja.wikipedia.org/wiki/%E5%9E%8B%E6%8E%A8%E8%AB%96" title="型推論 – Japanese" lang="ja" hreflang="ja" class="interlanguage-link-target">日本語</a></li><li class="interlanguage-link interwiki-pl"><a href="https://pl.wikipedia.org/wiki/Inferencja_typ%C3%B3w" title="Inferencja typów – Polish" lang="pl" hreflang="pl" class="interlanguage-link-target">Polski</a></li><li class="interlanguage-link interwiki-ru"><a href="https://ru.wikipedia.org/wiki/%D0%92%D1%8B%D0%B2%D0%BE%D0%B4_%D1%82%D0%B8%D0%BF%D0%BE%D0%B2" title="Вывод типов – Russian" lang="ru" hreflang="ru" class="interlanguage-link-target">Русский</a></li><li class="interlanguage-link interwiki-uk"><a href="https://uk.wikipedia.org/wiki/%D0%92%D0%B8%D0%B2%D1%96%D0%B4_%D1%82%D0%B8%D0%BF%D1%96%D0%B2" title="Вивід типів – Ukrainian" lang="uk" hreflang="uk" class="interlanguage-link-target">Українська</a></li><li class="interlanguage-link interwiki-zh"><a href="https://zh.wikipedia.org/wiki/%E7%B1%BB%E5%9E%8B%E6%8E%A8%E8%AE%BA" title="类型推论 – Chinese" lang="zh" hreflang="zh" class="interlanguage-link-target">中文</a></li>					</ul>/n				<div class="after-portlet after-portlet-lang"><span class="wb-langlinks-edit wb-langlinks-link"><a href="https://www.wikidata.org/wiki/Special:EntityPage/Q586459#sitelinks-wikipedia" title="Edit interlanguage links" class="wbc-editpage">Edit links</a></span></div>			</div>/n		</div>/n				</div>/n		</div>/n		<div id="footer" role="contentinfo">/n							<ul id="footer-info">/n											<li id="footer-info-lastmod"> This page was last edited on 11 September 2017, at 10:03.</li>/n											<li id="footer-info-copyright">Text is available under the <a rel="license" href="//en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License">Creative Commons Attribution-ShareAlike License</a><a rel="license" href="//creativecommons.org/licenses/by-sa/3.0/" style="display:none;"></a>;/nadditional terms may apply.  By using this site, you agree to the <a href="//wikimediafoundation.org/wiki/Terms_of_Use">Terms of Use</a> and <a href="//wikimediafoundation.org/wiki/Privacy_policy">Privacy Policy</a>. Wikipedia® is a registered trademark of the <a href="//www.wikimediafoundation.org/">Wikimedia Foundation, Inc.</a>, a non-profit organization.</li>/n									</ul>/n							<ul id="footer-places">/n											<li id="footer-places-privacy"><a href="https://wikimediafoundation.org/wiki/Privacy_policy" class="extiw" title="wmf:Privacy policy">Privacy policy</a></li>/n											<li id="footer-places-about"><a href="/wiki/Wikipedia:About" title="Wikipedia:About">About Wikipedia</a></li>/n											<li id="footer-places-disclaimer"><a href="/wiki/Wikipedia:General_disclaimer" title="Wikipedia:General disclaimer">Disclaimers</a></li>/n											<li id="footer-places-contact"><a href="//en.wikipedia.org/wiki/Wikipedia:Contact_us">Contact Wikipedia</a></li>/n											<li id="footer-places-developers"><a href="https://www.mediawiki.org/wiki/Special:MyLanguage/How_to_contribute">Developers</a></li>/n											<li id="footer-places-cookiestatement"><a href="https://wikimediafoundation.org/wiki/Cookie_statement">Cookie statement</a></li>/n											<li id="footer-places-mobileview"><a href="//en.m.wikipedia.org/w/index.php?title=Type_inference&amp;mobileaction=toggle_view_mobile" class="noprint stopMobileRedirectToggle">Mobile view</a></li>/n									</ul>/n										<ul id="footer-icons" class="noprint">/n											<li id="footer-copyrightico">/n							<a href="https://wikimediafoundation.org/"><img src="/static/images/wikimedia-button.png" srcset="/static/images/wikimedia-button-1.5x.png 1.5x, /static/images/wikimedia-button-2x.png 2x" width="88" height="31" alt="Wikimedia Foundation"/></a>						</li>/n											<li id="footer-poweredbyico">/n							<a href="//www.mediawiki.org/"><img src="/static/images/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" srcset="/static/images/poweredby_mediawiki_132x47.png 1.5x, /static/images/poweredby_mediawiki_176x62.png 2x" width="88" height="31"/></a>						</li>/n									</ul>/n						<div style="clear:both"></div>/n		</div>/n		<script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.120","walltime":"0.606","ppvisitednodes":{"value":374,"limit":1000000},"ppgeneratednodes":{"value":0,"limit":1500000},"postexpandincludesize":{"value":11842,"limit":2097152},"templateargumentsize":{"value":78,"limit":2097152},"expansiondepth":{"value":7,"limit":40},"expensivefunctioncount":{"value":0,"limit":500},"entityaccesscount":{"value":0,"limit":400},"timingprofile":["100.00%  578.742      1 -total"," 11.75%   68.022      1 Template:Reflist","  6.17%   35.719      1 Template:Cite_book","  4.59%   26.593      1 Template:Type_systems","  4.30%   24.868      1 Template:Sidebar","  2.44%   14.115      2 Template:Citation","  1.69%    9.802      1 Template:Main","  1.24%    7.193      1 Template:Anchor","  1.13%    6.535      1 Template:Webarchive","  0.54%    3.134      1 Template:Main_other"]},"scribunto":{"limitreport-timeusage":{"value":"0.045","limit":"10.000"},"limitreport-memusage":{"value":2240338,"limit":52428800}},"cachereport":{"origin":"mw1213","timestamp":"20171025100818","ttl":1900800,"transientcontent":false}}});});</script><script>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":73,"wgHostname":"mw1219"});});</script>/n	</body>/n</html>/n